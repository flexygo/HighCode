var flexygo;!function(flexygo){!function(events){class Push{constructor(cnn){try{this.connection=cnn,this.connection.hub.start({}).done(()=>{this.connection.genericHub.server.connect()}),this.connection.hub.stateChanged(state=>{const stateConversion={0:"Connecting",1:"Online",2:"Reconnecting",4:"Offline"};console.log(`${moment().format("HH:mm:ss")}: SignalR state changed from ${state.oldState} ${stateConversion[state.oldState]} to ${state.newState} ${stateConversion[state.newState]}`)}),this.connection.genericHub.client.genericEvent=this.genericEvent}catch(e){flexygo.msg.error("SignalR connection error"+e.message)}}timerStillAlive(){4!=this.connection.hub.state&&($.signalR.transports._logic.markActive($.connection),console.log(`${moment().format("HH: mm: ss")}: LastActiveDate: ${$.connection._.lastActiveAt}`),setTimeout(()=>{this.timerStillAlive()},1e4))}currentState(){return console.log(`${moment().format("HH:mm:ss")}: SignalR state ${this.connection.hub.state} ${{0:"Connecting",1:"Online",2:"Reconnecting",4:"Offline"}[this.connection.hub.state]}`),this.connection.hub.state}reconnect(){4==this.connection.hub.state?($.signalR.transports._logic.reconnect($.connection),setTimeout(()=>{console.log(`${moment().format("HH: mm: ss")}: Comprobando conexi√≥n`),this.reconnect()},5e3)):this.timerStillAlive()}genericEvent(ev){var eventInfo={class:ev.EventClass.key,type:ev.EventType.key,sender:ev.sender,masterIdentity:ev.masterIdentity,detailIdentity:ev.detailIdentity,firedBy:ev.firedBy};flexygo.events.trigger(eventInfo)}}events.Push=Push,$.connection&&(events.signalRCnn=new Push($.connection))}(flexygo.events||(flexygo.events={}))}(flexygo||(flexygo={}));
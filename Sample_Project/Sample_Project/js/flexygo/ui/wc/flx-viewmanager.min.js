var flexygo;!function(flexygo){!function(ui){!function(wc){wc.FlxViewManagerElement=class extends HTMLElement{constructor(){super(),this.connected=!1,this.objectname=null,this.viewname=null,this.newValue=0,this.tree=null,this.cmb=null,this.fields=null}connectedCallback(){let element=$(this);this.connected=!0,this.objectname=element.attr("ObjectName"),this.viewname=element.attr("ViewName"),this.init()}static get observedAttributes(){return[]}attributeChangedCallback(attrName,oldVal,newVal){this.connected}init(){this.refresh()}refresh(){this.config=new flexygo.obj.Entity(this.objectname).getConfig();let me=$(this),btns=$('<div class="row"><div class="col-6"><div class="btn-group" role="listType" /></div><div class="col-6"><button style="float:right" class="btn btn-info btnSaveList">Save & Continue  <i class="flx-icon icon-order-right-2" /></button></div></div>');btns.find(".btn-group").append('<button type="button" class="btn btn-success" name="btn-fields"><i class="flx-icon icon-listbox-2" /> From Fields</button>'),btns.find(".btn-group").append('<button type="button" class="btn btn-default" name="btn-sql"><i class="flx-icon icon-sql" /> From SQL</button>');let pnl=$('<div class="pnlFields"></div>');pnl.append('<div class="col-3" style="padding-right:15px"><div class=""><span class="label">'+flexygo.localization.translate("viewmanager.properties")+':</span><br/><ul class="objtree list-group"></ul></div></div>'),pnl.append('<div class="col-9"><span class="label">'+flexygo.localization.translate("viewmanager.fields")+':</span><br/><ul class="filterFields list-group"></ul></div>'),me.append(btns),me.append(pnl),me.append('<div class="pnlSQL" style="display:none"><flx-code type="sql" class="txtSQL" ></flx-code><button class="btnTestView btn btn-warning"><i class="flx-icon icon-double-check"></i> '+flexygo.localization.translate("viewmanager.validate")+"</button></div>"),this.tree=me.find(".objtree"),this.loadObj(me.attr("ObjectName"),this.tree,!0),this.cmb=me.find(".filterCmb"),this.fields=me.find(".filterFields"),me.find('[role="listType"] button').on("click",e=>{switch(me.find('[role="listType"] button.btn-success').removeClass("btn-success").addClass("btn-default"),$(e.currentTarget).attr("name").toLowerCase()){case"btn-fields":me.find(".pnlSQL").hide(),me.find(".pnlFields").show();break;case"btn-sql":me.find(".pnlFields").hide(),me.find(".pnlSQL").show();let myCm=me.find(".txtSQL")[0].myCM;myCm&&myCm.refresh()}$(e.currentTarget).addClass("btn-success")}),me.find(".btnSaveList").on("click",e=>{this.saveView()}),me.find(".btnTestView").on("click",e=>{this.validateView()}),this.loadView()}validateView(){let sqlStr=$(this).find(".txtSQL").val();if(""==sqlStr)flexygo.msg.error(flexygo.localization.translate("viewmanager.errornosql"));else{let params={ObjectName:this.objectname,SQL:sqlStr};flexygo.ajax.post("~/api/Sys","validateView",params,response=>{flexygo.msg.success("Test succesfully :)")})}}saveView(){try{let me=$(this),fils=new Array,sqlStr="";if(me.find(".filterFields").is(":visible")){let itms=this.fields.find("li");if(0==itms.length)throw new Error(flexygo.localization.translate("viewmanager.errornofields"));for(let i=0;i<itms.length;i++){let fil=new flexygo.api.SearchProperty,ctl=$(itms[i]).data("extvalue");fil.ObjectName=ctl.ObjectPropertyName,fil.PropertyName=ctl.PropertyName,fil.ObjectPath=ctl.ObjectPath,fil.Order=i,fil.Label=$(itms[i]).find("input").val(),fils.push(fil)}}else if(""==(sqlStr=me.find(".txtSQL").val()))throw new Error(flexygo.localization.translate("viewmanager.errornosql"));let params=new flexygo.api.sys.saveViewParams;params.ObjectName=this.objectname,this.viewname&&""!=this.viewname?params.ViewName=this.viewname:params.ViewName=this.objectname+"DefaultList",params.Properties=new Array,params.SQL=sqlStr;for(let i=0;i<fils.length;i++){let itm=Object.assign({},fils[i]);params.Properties.push(itm)}flexygo.ajax.post("~/api/Sys","saveView",params,view=>{this.setView(view),flexygo.msg.success("Saved :)")})}catch(e){flexygo.msg.error(e.message)}}loadView(){let params=new flexygo.api.sys.getViewParams;params.ObjectName=this.objectname,params.ViewName=this.viewname,flexygo.ajax.post("~/api/Sys","getView",params,view=>{this.setView(view)}),this.fields.sortable()}setView(view){let me=$(this);if(this.fields.empty(),view){this.viewname=view.Name,me.find(".txtSQL").val(view.SQL);let arrOrdered=flexygo.utils.sortObject(view.Properties,"Order");for(let i=0;i<arrOrdered.length;i++){let prop=arrOrdered[i];this.fields.append(this.createField(prop))}arrOrdered.length>0?me.find('button[name="btn-fields"]').click():me.find('button[name="btn-sql"]').click()}}loadObj(ObjectName,elm,first){let params={ObjectName};flexygo.ajax.post("~/api/Sys","getRelatedObjetsAndProps",params,response=>{for(let key in response.RelatedObjects){let prop=$("");1==response.RelatedObjects[key].ShowInAnalysis&&((prop=$('<li class="list-group-item objectFolder"></li>')).html('<span><i class="flx-icon icon-folder" /> '+key+"<span>"),prop.data("extvalue",response.RelatedObjects[key]),prop.addClass("obj-filter"),prop.find("span").on("click",e=>{let el=$(e.currentTarget).closest("li");if(el.find("i:first").toggleClass("icon-folder").toggleClass("icon-folder-2"),el.find("ul").length>0)el.find("ul:first").toggle();else{let itm=$('<ul class="list-group" />');this.loadObj(el.data("extvalue").ChildCollection,itm,!1),el.append(itm)}})),elm.append(prop)}let itm=$('<li class="list-group-item"></li>');for(let key in response.Properties)if("separator"!=response.Properties[key].ControlType&&"placeholder"!=response.Properties[key].ControlType){let obj=$("<div />");obj.html('<label><input type="checkbox" /> '+response.Properties[key].Label+"</label>"),obj.data("extvalue",response.Properties[key]),obj.addClass("prop-filter"),itm.append(obj)}if(itm.on("click",e=>{e.stopPropagation()}),elm.append(itm),first){let bitm=$('<li class="list-group-item"></li>'),btn=$('<button class="btn btn-default bg-info"><i class="flx-icon icon-plus" /> '+flexygo.localization.translate("viewmanager.add")+"</button>");bitm.append(btn),btn.on("click",e=>{this.appendFields()}),elm.append(bitm)}})}appendFields(){let me=$(this),inp=this.tree.find("input:checked");for(let i=0;i<inp.length;i++){let prop=$(inp[i]).closest("div").data("extvalue");if(0==me.find('[prop="'+prop.ObjectName+"-"+prop.Name+'"]').length){let fld=new flexygo.api.ObjectViewProperty;fld.Label=this.getLabel(prop.Label),fld.ObjectPropertyName=prop.ObjectName,fld.ObjectPath=this.findPath($(inp[i]).closest("div")),fld.PropertyName=prop.Name,fld.Order=this.fields.find(".filterField").length;let fil=this.createField(fld);fil.hide(),this.fields.append(fil)}else flexygo.msg.error(flexygo.string.format(flexygo.localization.translate("viewmanager.errorduplicateprop"),prop.Label))}this.fields.find("li:not(:visible)").show("250"),this.fields.sortable(),inp.prop("checked",!1)}getLabel(label){let newLabel=label;if(this.config.KeyFields.length>0){let existe=!0,cnt=0;for(;existe;){existe=!1;for(let i=0;i<this.config.KeyFields.length;i++)newLabel.toLowerCase()==this.config.KeyFields[i].toLowerCase()&&(existe=!0);existe&&(newLabel=label+"_"+(cnt+=1))}}return newLabel}createField(fld){let itm=$('<li class="list-group-item filterField" />');return itm.attr("prop",fld.ObjectPropertyName+"-"+fld.PropertyName),itm.data("extvalue",fld),itm.html('<input class="form-control" type="text" value="'+fld.Label+'" />'),itm.append(' <span class="comment">('+flexygo.utils.parser.replaceAll(fld.ObjectPath,"|"," > ")+') <i class="flx-icon icon-trash clickable size-l" /></span>'),itm.find(".icon-trash").on("click",e=>{let li=$(e.currentTarget).closest("li");li.hide(250,()=>{li.remove()})}),itm}findPath(obj){let pathArr=new Array,parents=obj.parents("li.objectFolder");return $.each(parents,(i,e)=>{pathArr.unshift($(e).data("extvalue").ObjectName)}),pathArr.push(obj.data("extvalue").ObjectName),pathArr.join("|")}}}(ui.wc||(ui.wc={}))}(flexygo.ui||(flexygo.ui={}))}(flexygo||(flexygo={})),window.customElements.define("flx-viewmanager",flexygo.ui.wc.FlxViewManagerElement);
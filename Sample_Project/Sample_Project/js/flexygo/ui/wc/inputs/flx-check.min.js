var flexygo;!function(flexygo){!function(ui){!function(wc){wc.FlxCheckElement=class extends HTMLElement{constructor(){super(),this.connected=!1,this.options=null}connectedCallback(){let element=$(this),isFilter=!1,propName=element.attr("property");if(propName&&flexygo.utils.isBlank(this.options)){let parentCtl=element.closest("flx-edit,flx-list,flx-propertymanager,flx-view,flx-filter");if(parentCtl&&parentCtl.length>0){let wcParent=parentCtl[0];if(parentCtl.is("flx-filter")){let objName=element.attr("object");this.options=jQuery.extend(!0,{},wcParent.properties[objName+"-"+propName]),isFilter=!0,Object.defineProperty(this.options,"Hide",{enumerable:!0,configurable:!1,writable:!1,value:!1})}else this.options=jQuery.extend(!0,{},wcParent.properties[propName])}this.property=propName}void 0!==element.attr("Disabled")&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Locked=!0);let Style=element.attr("Style");Style&&""!=Style&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Style=Style,element.attr("Control-Style",this.options.Style),element.attr("Style",""));let Class=element.attr("Class");Class&&""!=Class&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.CssClass=Class,element.attr("Control-Class",this.options.CssClass),element.attr("Class",""));let ctlClass=element.attr("Control-Class");ctlClass&&""!=ctlClass&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.CssClass=ctlClass);let ctlStyle=element.attr("Control-Style");ctlStyle&&""!=ctlStyle&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Style=ctlStyle);let Hide=element.attr("Hide");!isFilter&&Hide&&""!=Hide&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Hide="true"==Hide);let AllowNull=element.attr("allowNull");if((AllowNull||""==AllowNull)&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.AllowNull=!0),this.init(),this.options&&this.options.AllowNull||void 0===element.attr("checked"))if(this.options&&this.options.AllowNull){let val=element.attr("Value");val&&("true"==val.toLowerCase()||"checked"==val.toLowerCase()||"1"==val?this.setValue(!0):"false"!=val.toLowerCase()&&"0"!=val||this.setValue(!1))}else{let val=element.attr("Value");val&&("true"==val.toLowerCase()||"checked"==val.toLowerCase()||"1"==val?(element.attr("checked","checked"),this.setValue(!0)):"false"!=val.toLowerCase()&&"0"!=val||this.setValue(!1))}else this.setValue(!0);this.connected=!0}static get observedAttributes(){return["modulename","property","disabled","style","class","hide","allownull"]}attributeChangedCallback(attrName,oldVal,newVal){let element=$(this);if(this.connected){if("modulename"==attrName.toLowerCase()&&newVal&&""!=newVal&&(this.moduleName=newVal,this.moduleName&&this.refresh(),this.init()),"property"==attrName.toLowerCase()&&newVal&&""!=newVal){let propName=newVal,parentCtl=element.closest("flx-edit, flx-list,flx-filter,flx-propertymanager");if(parentCtl&&parentCtl.length>0){let wcParent=parentCtl[0];if(parentCtl.is("flx-filter")){let objName=element.attr("object");this.options=jQuery.extend(!0,{},wcParent.properties[objName+"-"+propName])}else this.options=jQuery.extend(!0,{},wcParent.properties[propName])}this.property=newVal,this.init()}"disabled"==attrName.toLowerCase()&&(this.options||(this.options=new flexygo.api.ObjectProperty),void 0!==element.attr("disabled")?this.options.Locked=!0:this.options.Locked=!1,element.find("input").prop("disabled",this.options.Locked)),"style"==attrName.toLowerCase()&&newVal&&""!=newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Style=newVal,element.attr("Control-Style")!==this.options.Style&&(element.attr("Control-Style",this.options.Style),element.attr("Style",""),this.init())),"class"==attrName.toLowerCase()&&newVal&&""!=newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.CssClass=newVal,element.attr("Control-Class")!==this.options.CssClass&&(element.attr("Control-Class",this.options.CssClass),element.attr("Class",""),this.init())),"hide"==attrName.toLowerCase()&&newVal&&""!=newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Hide=newVal,this.init()),"allownull"==attrName.toLowerCase()&&newVal&&""!=newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.AllowNull=newVal,this.init()),"value"==attrName.toLowerCase()&&newVal&&""!=newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.setValue(newVal))}}refresh(){let val=this.getValue();this.init(),val&&""!=val&&this.setValue(val)}init(){this.initEditMode()}initEditMode(){let me=$(this),id=flexygo.utils.uniqueId();me.html('<div><input type="checkbox" id="'+id+'"  /><label for="'+id+'"></label></div>'),this.setOptions(),me.find("div:first").on("click",()=>{me.trigger("focusin"),me.find("input").focus()})}setOptions(){let me=$(this),input=me.find("input");input.on("blur",()=>{me.trigger("blur")}),this.options&&this.options.AllowNull&&this.setValue(null),me.attr("mode")&&"view"===me.attr("mode").toLowerCase()||input.on("change.refreshvalue",()=>{if(this.options&&this.options.AllowNull)switch(input.data("checked")){case 0:me.attr("value",null),this.setValue(null);break;case 1:me.attr("value","true"),this.setValue(!0);break;default:me.attr("value","false"),this.setValue(!1)}else input.prop("checked")?(me.attr("checked","true"),me.attr("value","true")):(me.attr("value","false"),me.removeAttr("checked"))}),this.options&&this.options.Name&&""!=this.options.Name?input.attr("name",this.options.Name):input.attr("name",flexygo.utils.uniqueName()),me.attr("tab")&&""!=me.attr("tab")&&input.attr("tabindex",me.attr("tab")),this.options&&this.options.Locked&&input.prop("disabled",this.options.Locked),me.attr("mode")&&"view"===me.attr("mode").toLowerCase()&&input.prop("disabled",!0),this.options&&this.options.Style&&me.children("div").attr("style",this.options.Style),this.options&&this.options.CssClass&&me.children("div").addClass(this.options.CssClass),this.options&&this.options.CauseRefresh&&input.on("change",()=>{let ev={class:"property",type:"changed",sender:this,masterIdentity:this.property};flexygo.events.trigger(ev)}),this.options&&this.options.Hide&&me.addClass("hideControl")}setValue(value){let me=$(this),input=me.find("input");if(this.options&&this.options.AllowNull)switch(value){case!0:case"true":case"True":case"1":input.data("checked",2),input.prop("indeterminate",!1),input.prop("checked",!0);break;case!1:case"false":case"False":case"0":input.data("checked",0),input.prop("indeterminate",!1),input.prop("checked",!1);break;default:input.data("checked",1),input.prop("indeterminate",!0)}else"true"==value||"True"==value||"1"==value?value=!0:"false"!=value&&"False"!=value&&"0"!=value||(value=!1),input.prop("checked",value),me.attr("value",value)}getValue(){let me=$(this);if(me.attr("mode")&&"view"===me.attr("mode").toLowerCase())return this.value;let input=me.find("input");return this.options&&this.options.AllowNull&&1==input.prop("indeterminate")?null:input.prop("checked")}triggerDependencies(){let me,input;(input=(me=$(this)).find("input")).trigger("change")}}}(ui.wc||(ui.wc={}))}(flexygo.ui||(flexygo.ui={}))}(flexygo||(flexygo={})),window.customElements.define("flx-check",flexygo.ui.wc.FlxCheckElement);
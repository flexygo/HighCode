var flexygo;!function(flexygo){!function(ui){!function(wc){class FlxRadioElement extends HTMLElement{constructor(){super(),this.connected=!1,this.property=null,this.type="radio",this.options=null,this.value=null,this.name=null}connectedCallback(){let element=$(this),propName=element.attr("property");if(propName&&flexygo.utils.isBlank(this.options)){let parentCtl=element.closest("flx-edit,flx-list,flx-propertymanager,flx-view,flx-filter");if(parentCtl&&parentCtl.length>0){let wcParent=parentCtl[0];if(parentCtl.is("flx-filter")){let objName=element.attr("object");this.options=jQuery.extend(!0,{},wcParent.properties[objName+"-"+propName])}else this.options=jQuery.extend(!0,{},wcParent.properties[propName])}this.property=propName}void 0!==element.attr("Required")&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.IsRequired=!0),void 0!==element.attr("Multiple")&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Multiple=!0);let Separator=element.attr("Separator");Separator&&""!==Separator&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Separator=Separator),void 0!==element.attr("Disabled")&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Locked=!0);let RequiredMessage=element.attr("RequiredMessage");RequiredMessage&&""!==RequiredMessage&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.IsRequiredMessage=RequiredMessage);let Style=element.attr("Style");Style&&""!==Style&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Style=Style,element.attr("Control-Style",this.options.Style),element.attr("Style",""));let Class=element.attr("Class");Class&&""!==Class&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.CssClass=Class,element.attr("Control-Class",this.options.CssClass),element.attr("Class",""));let IconClass=element.attr("IconClass");IconClass&&""!==IconClass&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.IconClass=IconClass);let Options=element.find("option");Options.length>0&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.HTMLDropDownValues=Options,Options.remove());let ctlClass=element.attr("Control-Class");ctlClass&&""!==ctlClass&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.CssClass=ctlClass);let ctlStyle=element.attr("Control-Style");ctlStyle&&""!==ctlStyle&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Style=ctlStyle);let Hide=element.attr("Hide");Hide&&""!==Hide&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Hide="true"==Hide);let ValidatorMessage=element.attr("ValidatorMessage");ValidatorMessage&&""!==ValidatorMessage&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.ValidatorMessage=ValidatorMessage),this.init();let Value=element.attr("Value"),Text=element.attr("Text");Value&&""!==Value&&this.setValue(Value,Text),this.connected=!0}attributeChangedCallback(attrName,oldVal,newVal){let element=$(this);if(this.connected){if("type"===attrName.toLowerCase()&&newVal&&""!==newVal&&(this.type=newVal,this.refresh()),"property"===attrName.toLowerCase()&&newVal&&""!==newVal){let propName=newVal,parentCtl=element.closest("flx-edit, flx-list,flx-propertymanager");if(parentCtl&&parentCtl.length>0){let wcParent=parentCtl[0];this.options=jQuery.extend(!0,{},wcParent.properties[propName])}this.property=newVal,this.refresh()}"required"===attrName.toLowerCase()&&(this.options||(this.options=new flexygo.api.ObjectProperty),void 0!==element.attr("required")?this.options.IsRequired=!0:this.options.IsRequired=!1,this.options.Multiple?element.find("input.radioValInput").prop("required",this.options.IsRequired):element.find("input").prop("required",this.options.IsRequired)),"disabled"===attrName.toLowerCase()&&(this.options||(this.options=new flexygo.api.ObjectProperty),void 0!==element.attr("disabled")?this.options.Locked=!0:this.options.Locked=!1,element.find("input").prop("disabled",this.options.Locked)),"multiple"===attrName.toLowerCase()&&(void 0!==element.attr("multiple")&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Multiple=!0),this.refresh()),"separator"===attrName.toLowerCase()&&newVal&&""!==newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Separator=newVal,this.refresh()),"requiredmessage"===attrName.toLowerCase()&&newVal&&""!==newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.IsRequiredMessage=newVal,this.refresh()),"style"===attrName.toLowerCase()&&newVal&&""!==newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Style=newVal,element.attr("Control-Class")!==this.options.Style&&(element.attr("Control-Style",this.options.Style),element.attr("Style",""),this.refresh())),"class"===attrName.toLowerCase()&&element.attr("Control-Class")!==newVal&&newVal!=oldVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.CssClass=newVal,element.attr("Control-Class")!==this.options.CssClass&&(""!=newVal&&(element.attr("Control-Class",this.options.CssClass),element.attr("Class",this.options.CssClass)),this.refresh())),"iconclass"===attrName.toLowerCase()&&newVal&&""!==newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.IconClass=newVal,this.refresh()),"hide"===attrName.toLowerCase()&&newVal&&""!==newVal&&(this.options||(this.options=new flexygo.api.ObjectProperty),this.options.Hide=newVal,this.refresh())}}refresh(){let val=this.getValue(),txt=$(this).attr("Text");this.init(),val&&""!=val&&this.setValue(val,txt)}init(){if(this.options){let control=$("<div>");$(this).html(control),this.setOptions()}}setOptions(){let label,input,me=$(this),control=me.find("div");this.options&&this.options.Name&&""!==this.options.Name?this.name=this.options.Name:this.name=flexygo.utils.uniqueName();let name=this.name;if(this.options&&this.options.DropDownValues){let checked=control.find("input:checked");control.empty();for(let i=0;i<this.options.DropDownValues.length;i++)label=$("<label />"),this.options.Multiple?(input=$('<input type="checkbox">'),name=this.options.DropDownValues[i][this.options.SQLDisplayField]):input=$('<input type="radio">'),me.attr("tabindex")&&""!==me.attr("tabindex")&&input.attr("tabindex",me.attr("tabindex")),input.attr("value",this.options.DropDownValues[i][this.options.SQLValueField]).attr("name",name),label.append(input).append(this.options.DropDownValues[i][this.options.SQLDisplayField]),control.append(label);this.options.Multiple&&control.append(`<input class="hidden radioValInput" name="${this.name}"/>`),checked.map((i,e)=>{let checkInput=control.find('input[value="'+e.value+'"]')[0];checkInput&&(checkInput.checked=!0)})}else if(this.options.HTMLDropDownValues)for(let j=0;j<this.options.HTMLDropDownValues.length;j++){let opt=$(this.options.HTMLDropDownValues[j]);label=$("<label />"),(input=this.options.Multiple?$('<input type="checkbox">'):$('<input type="radio">')).attr("value",opt.val()).attr("name",this.name),label.append(input).append(opt.text()),control.append(label)}void 0!==input&&input.on("blur",()=>{me.trigger("blur")});const module=me.closest("flx-module")[0];(this.options&&this.options.CauseRefresh&&this.options.SQLValidator||module&&module.moduleConfig&&module.moduleConfig.PropsEventDependant&&module.moduleConfig.PropsEventDependant.includes(this.property))&&control.find("input").off("change").on("change",()=>{let ev={class:"property",type:"changed",sender:this,masterIdentity:this.property};flexygo.events.trigger(ev,me)}),this.options&&this.options.Locked&&control.find("input").prop("disabled",this.options.Locked),me.attr("mode")&&"view"===me.attr("mode").toLowerCase()&&control.find("input").prop("disabled",!0),this.options.Style&&me.children("div").attr("style",this.options.Style),this.options.CssClass&&me.children("div").addClass(this.options.CssClass),this.options&&this.options.IsRequired&&(this.options.Multiple?control.find("input.radioValInput").prop("required",this.options.IsRequired):control.find("input").prop("required",this.options.IsRequired)),this.options&&this.options.IsRequiredMessage&&control.find("input").attr("data-msg-required",this.options.IsRequiredMessage),this.options&&this.options.Hide&&me.addClass("hideControl"),this.options&&this.options.ValidatorMessage&&""!==this.options.ValidatorMessage&&control.find("input").attr("data-msg-sqlvalidator",this.options.ValidatorMessage),control.find('input[type="radio"]').off("click").on("click",e=>{let inp=$(e.currentTarget);"true"===inp.attr("lastvalue")&&inp.prop("checked",!1),inp.closest("div").find("input").attr("lastvalue","false"),inp.attr("lastvalue",inp.prop("checked"))})}changeSQLData(newSQL,newOptions){this.options.SQLSentence=newSQL,this.options.SQLEditSentence=newSQL,this.options.DropDownValues=newOptions,this.setOptions()}setValue(value,text){let input,label,me=$(this);if(this.options.Multiple){if(!flexygo.utils.isBlank(value)){let opt=value.toString().split(this.options.Separator);for(let i=0;i<opt.length;i++)me.attr("mode")&&"view"===me.attr("mode").toLowerCase()?me.find('input[value="'+opt[i]+'"]').prop("checked",!0).prop("disabled",!0):(0===me.find('input[value="'+opt[i]+'"]').length&&(label=$("<label />"),(input=$('<input type="checkbox">')).attr("value",opt[i]).attr("name",this.name),label.append(input).append(opt[i]),me.find("div").append(label)),me.find('input[value="'+opt[i]+'"]').prop("checked",!0),me.attr("value",value))}}else""!==text&&null!==text||(text=value),0!==me.find('input[value="'+value+'"]').length||flexygo.utils.isBlank(value)||(label=$("<label />"),(input=$('<input type="radio">')).attr("value",value).attr("name",this.name),label.append(input).append(text),me.find("div").append(label),me.find("div").find('input[type="radio"]').off("click"),me.find("div").find('input[type="radio"]').on("click",e=>{let inp=$(e.currentTarget);"true"===inp.attr("lastvalue")&&inp.prop("checked",!1),inp.closest("div").find("input").attr("lastvalue","false"),inp.attr("lastvalue",inp.prop("checked"))})),me.find('input[value="'+value+'"]').prop("checked",!0),me.attr("value",value)}setValueView(value){this.value=value,$(this).find("label").html(value)}getValue(){let val,input=$(this).find("input:checked");val=0===input.length||""===input.val()?null:1===input.length?input.val():input.map((i,e)=>e.value).get().join(this.options.Separator);let valueInput=$(this).find("input.radioValInput")[0];return valueInput&&(valueInput.value=val),val}triggerDependencies(){let me,control,input;(input=(control=(me=$(this)).find("div")).find("input")).trigger("change")}}FlxRadioElement.observedAttributes=["type","property","required","disabled","multiple","separator","requiredmessage","style","class","iconclass","hide","validatormessage"],wc.FlxRadioElement=FlxRadioElement}(ui.wc||(ui.wc={}))}(flexygo.ui||(flexygo.ui={}))}(flexygo||(flexygo={})),window.customElements.define("flx-radio",flexygo.ui.wc.FlxRadioElement);
var flexygo;!function(flexygo){var ui_1;(function(wc){let eStepResult,eStepStatus;!function(eStepResult){eStepResult[eStepResult.NoResult=0]="NoResult",eStepResult[eStepResult.OK=1]="OK",eStepResult[eStepResult.Error=2]="Error",eStepResult[eStepResult.Warning=3]="Warning"}(eStepResult||(eStepResult={})),function(eStepStatus){eStepStatus[eStepStatus.Initiliazing=0]="Initiliazing",eStepStatus[eStepStatus.Running=1]="Running",eStepStatus[eStepStatus.Paused=2]="Paused",eStepStatus[eStepStatus.Finished=3]="Finished",eStepStatus[eStepStatus.Aborted=4]="Aborted",eStepStatus[eStepStatus.Waiting=5]="Waiting"}(eStepStatus||(eStepStatus={})),wc.WorkflowNodeMarker=class{},wc.GipeTemplateFilterConfig=class{};class FlxGipeDesignerElement extends HTMLElement{constructor(){super(),this.connected=!1,this.dialog=null,this.propertiesDialog=null,this.debugDialog=null,this.workflow=null,this.debugWorkflow=null,this.currentExecutionId=0,this.lastDebugGraphId=null,this.popupCell=null,this.templateFilter=null,this.fixedPropertiesDialog=!1}connectedCallback(){this.connected=!0,flexygo.events.on(this,"module","resized",this.onModuleResize),this.init()}disconnectedCallback(){flexygo.events.off(this,"module","resized",this.onModuleResize),this.dialog&&this.dialog.destroy(),this.propertiesDialog&&this.propertiesDialog.destroy(),this.debugDialog&&this.debugDialog.destroy()}attributeChangedCallback(attrName,oldVal,newVal){if(this.connected,("objectname"===attrName.toLowerCase()||"objectwhere"===attrName.toLowerCase())&&this.hasAttribute("objectName")&&this.hasAttribute("objectwhere")&&this.getAttribute("objectName").length>0&&this.getAttribute("objectWhere").length>0){let entity=new flexygo.obj.Entity(this.getAttribute("objectName"),this.getAttribute("objectWhere"));entity.read(),this.loadWorkflow(entity.data.WorkflowId.Value,-1,!1)}}init(){flexygo.events.on(this,"gipe","debugstep",this.onDebugStepChanged);let self=this,me=$(this);if(this.workflowStack=[],this.debugStack=[],me.empty(),this.uuid=flexygo.utils.uniqueUUID(),!mxClient.isBrowserSupported())return void mxUtils.error("Browser is not supported!",200,!1);let template=`\n                <div id="${this.uuid}" class="gipecp">\n                   <div class="gipetoolbar" id="gipetoolbar" />\n                   <ol class="breadcrumb" />\n                   <div class="gipecp graph" id="gipegraph" />\n                </div>\n            `;me.html(template),me.find("#gipegraph").droppable({drop:(event,ui)=>{this.doDropTemplate(ui)}}),mxClient.language=null,mxObjectCodec.allowEval=!0;let doc=mxUtils.parseXml('\n                <mxEditor\n\t                defaultGroup="group" defaultEdge=""\n\t                forcedInserting="0"\n\t                swimlaneRequired="0">\n\n\t                <Array as="cycleAttributeValues">\n\t\t                <add value="#EEEEEE"/>\n\t\t            </Array>\n\t\n\t                <Array as="templates"></Array>\n\n                    <mxDefaultKeyHandler as="keyHandler">\n\t\t               \n\t                </mxDefaultKeyHandler>\n\t\n\t                <ui>\n\t\t                <add as="graph" element="gipegraph"/>\n\t                </ui>\n\t\t\n\t                <mxGraph as="graph" alternateEdgeStyle="verticalEdge" dropEnabled="1">\n\t\t                <mxGraphModel as="model">\n\t\t\t                <root>\n\t\t\t\t                <Workflow label="" description="" id="0"/>\n\t\t\t\t                <Layer label="Default Layer">\n\t\t\t\t\t                <mxCell parent="0"/>\n\t\t\t\t                </Layer>\n\t\t\t                </root>\n\t\t                </mxGraphModel>\n\t\t                \n                        <mxStylesheet as="stylesheet">\n\t\t                </mxStylesheet>\n\t                </mxGraph>\n\t\n                </mxEditor>\n\n            ').childNodes[0];this.editor=new mxEditor(doc),mxObjectCodec.allowEval=!1,mxGraphHandler.prototype.guidesEnabled=!0,mxConstants.GUIDE_COLOR="#FF0000",mxConstants.GUIDE_STROKEWIDTH=1,mxEdgeHandler.prototype.snapToTerminals=!0,this.initGraphStyles(),this.initEditorTemplates(),this.initEditorToolbar(),this.initEditorKeyHandler(),this.initEditorMouseHandler(),this.initEditorPopupMenu(),this.editor.defaultEdge=this.editor.templates.relation,this.editor.addAction("open",(editor,cell)=>{!0===self.editor.isModified()?flexygo.msg.confirm(flexygo.localization.translate("flxgipe.confirmunsavedchanges"),ret=>{!0===ret&&self.openLoadDialog()}):self.openLoadDialog()}),this.editor.addAction("new",(editor,cell)=>{self.newWorkflow()}),this.editor.addAction("templates",(editor,cell)=>{self.openTemplateDialog()}),this.editor.addAction("save",(editor,cell)=>{self.openSaveDialog()}),this.editor.addAction("generate",(editor,cell)=>{self.generateWorkflow()}),this.editor.addAction("up",(editor,cell)=>{self.goUp(self.workflowStack.length-1)}),this.editor.addAction("down",(editor,cell)=>{self.goDown()}),this.editor.addAction("run",(editor,cell)=>{self.runWorkflow()}),this.editor.addAction("debug",(editor,cell)=>{self.startDebugWorkflow()}),this.editor.addAction("showProperties",(editor,cell)=>{!1!==this.fixedPropertiesDialog||null==this.propertiesDialog?1===graph.getSelectionCells().length?self.showCellProperties(graph.getSelectionCells()[0]):self.showCellProperties(null):this.propertiesDialog.destroy()}),this.editor.addAction("properties",(editor,cell)=>{let btn=$(this).find('button[data-btn="properties"]');!0===this.fixedPropertiesDialog?(this.fixedPropertiesDialog=!1,$(btn).removeClass("mxToolbarItemSelected").addClass("mxToolbarItem"),this.propertiesDialog&&(this.propertiesDialog.destroy(),this.destroyPropertiesDialog())):(this.fixedPropertiesDialog=!0,$(btn).removeClass("mxToolbarItem").addClass("mxToolbarItemSelected"),this.propertiesDialog||(this.openPropertiesDialog(),1===graph.getSelectionCells().length?self.showCellProperties(graph.getSelectionCells()[0]):self.showCellProperties(null)))});let graph=this.editor.graph;graph.setAllowDanglingEdges(!1),graph.setDisconnectOnMove(!1),graph.convertValueToString=function(cell){return cell.getAttribute("label","")};var cellLabelChanged=graph.cellLabelChanged;graph.cellLabelChanged=function(cell,newValue,autoSize){if(mxUtils.isNode(cell.value)){var elt=cell.value.cloneNode(!0);elt.setAttribute("label",newValue),newValue=elt}cellLabelChanged.apply(graph,[cell,newValue,autoSize])},graph.getSelectionModel().addListener(mxEvent.CHANGE,function(sender,evt){self.updateToolbarStatus(),!0===self.fixedPropertiesDialog&&(1===graph.getSelectionCells().length?self.showCellProperties(graph.getSelectionCells()[0]):self.showCellProperties(null))}),this.editor.graph.setHtmlLabels(!0),this.setGraphSize(),this.render()}initGraphStyles(){let style=null;(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RECTANGLE,style[mxConstants.STYLE_PERIMETER]=mxPerimeter.RectanglePerimeter,style[mxConstants.STYLE_STROKECOLOR]="#98c75d",style[mxConstants.STYLE_ROUNDED]=!0,style[mxConstants.STYLE_FILLCOLOR]="#cce3ae",style[mxConstants.STYLE_FONTCOLOR]="black",style[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_CENTER,style[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,style[mxConstants.STYLE_FONTSIZE]="12",style[mxConstants.STYLE_WHITE_SPACE]="wrap",this.editor.graph.getStylesheet().putDefaultVertexStyle(style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RECTANGLE,style[mxConstants.STYLE_PERIMETER]=mxPerimeter.RectanglePerimeter,style[mxConstants.STYLE_STROKECOLOR]="#c75d62",style[mxConstants.STYLE_FILLCOLOR]="#db9699",this.editor.graph.getStylesheet().putCellStyle("invalid-rectangle",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RECTANGLE,style[mxConstants.STYLE_PERIMETER]=mxPerimeter.RectanglePerimeter,style[mxConstants.STYLE_STROKECOLOR]="#648b30",style[mxConstants.STYLE_FILLCOLOR]="#8cc048",style[mxConstants.STYLE_STROKEWIDTH]=4,this.editor.graph.getStylesheet().putCellStyle("success-rectangle",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RECTANGLE,style[mxConstants.STYLE_PERIMETER]=mxPerimeter.RectanglePerimeter,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ffa500",style[mxConstants.STYLE_FILLCOLOR]="#ffdb99",this.editor.graph.getStylesheet().putCellStyle("running-rectangle",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RECTANGLE,style[mxConstants.STYLE_PERIMETER]=mxPerimeter.RectanglePerimeter,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ff0f0f",style[mxConstants.STYLE_FILLCOLOR]="#ff4a4a",this.editor.graph.getStylesheet().putCellStyle("error-rectangle",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CONNECTOR,style[mxConstants.STYLE_STROKECOLOR]="#6482B9",style[mxConstants.STYLE_STROKEWIDTH]=2,style[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_CENTER,style[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,style[mxConstants.STYLE_EDGE]=mxEdgeStyle.ElbowConnector,style[mxConstants.STYLE_ENDARROW]=mxConstants.ARROW_CLASSIC,style[mxConstants.STYLE_VERTICAL_LABEL_POSITION]=mxConstants.ALIGN_TOP,style[mxConstants.STYLE_FONTSIZE]="12",style[mxConstants.STYLE_ENDSIZE]=2,style[mxConstants.STYLE_ENDFILL]=1,style[mxConstants.STYLE_ROUNDED]=1,this.editor.graph.getStylesheet().putDefaultEdgeStyle(style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CONNECTOR,style[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_CENTER,style[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,style[mxConstants.STYLE_EDGE]=mxEdgeStyle.ElbowConnector,style[mxConstants.STYLE_ENDARROW]=mxConstants.ARROW_CLASSIC,style[mxConstants.STYLE_VERTICAL_LABEL_POSITION]=mxConstants.ALIGN_TOP,style[mxConstants.STYLE_FONTSIZE]="12",style[mxConstants.STYLE_ENDSIZE]=2,style[mxConstants.STYLE_ENDFILL]=1,style[mxConstants.STYLE_ROUNDED]=1,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ffa500",style[mxConstants.STYLE_FILLCOLOR]="#ffdb99",this.editor.graph.getStylesheet().putCellStyle("running-edge",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CONNECTOR,style[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_CENTER,style[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,style[mxConstants.STYLE_EDGE]=mxEdgeStyle.ElbowConnector,style[mxConstants.STYLE_ENDARROW]=mxConstants.ARROW_CLASSIC,style[mxConstants.STYLE_VERTICAL_LABEL_POSITION]=mxConstants.ALIGN_TOP,style[mxConstants.STYLE_FONTSIZE]="12",style[mxConstants.STYLE_ENDSIZE]=2,style[mxConstants.STYLE_ENDFILL]=1,style[mxConstants.STYLE_ROUNDED]=1,style[mxConstants.STYLE_STROKECOLOR]="#648b30",style[mxConstants.STYLE_FILLCOLOR]="#8cc048",style[mxConstants.STYLE_STROKEWIDTH]=2,this.editor.graph.getStylesheet().putCellStyle("success-edge",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RECTANGLE,style[mxConstants.STYLE_PERIMETER]=mxPerimeter.RectanglePerimeter,style[mxConstants.STYLE_ALIGN]=mxConstants.ALIGN_CENTER,style[mxConstants.STYLE_VERTICAL_ALIGN]=mxConstants.ALIGN_MIDDLE,style[mxConstants.STYLE_STROKECOLOR]="black",style[mxConstants.STYLE_ROUNDED]=!0,style[mxConstants.STYLE_FILLCOLOR]="white",this.editor.graph.getStylesheet().putCellStyle("label",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_ELLIPSE,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_ELLIPSE,this.editor.graph.getStylesheet().putCellStyle("ellipse",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_ELLIPSE,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_ELLIPSE,style[mxConstants.STYLE_STROKECOLOR]="#c75d62",style[mxConstants.STYLE_FILLCOLOR]="#db9699",this.editor.graph.getStylesheet().putCellStyle("invalid-ellipse",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_ELLIPSE,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_ELLIPSE,style[mxConstants.STYLE_STROKECOLOR]="#648b30",style[mxConstants.STYLE_FILLCOLOR]="#8cc048",style[mxConstants.STYLE_STROKEWIDTH]=4,this.editor.graph.getStylesheet().putCellStyle("success-ellipse",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_ELLIPSE,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_ELLIPSE,style[mxConstants.STYLE_STROKECOLOR]="#ff0f0f",style[mxConstants.STYLE_FILLCOLOR]="#ff4a4a",style[mxConstants.STYLE_STROKEWIDTH]=4,this.editor.graph.getStylesheet().putCellStyle("error-ellipse",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_ELLIPSE,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_ELLIPSE,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ffa500",style[mxConstants.STYLE_FILLCOLOR]="#ffdb99",this.editor.graph.getStylesheet().putCellStyle("running-ellipse",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RHOMBUS,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,this.editor.graph.getStylesheet().putCellStyle("rhombus",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RHOMBUS,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKECOLOR]="#c75d62",style[mxConstants.STYLE_FILLCOLOR]="#db9699",this.editor.graph.getStylesheet().putCellStyle("invalid-rhombus",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RHOMBUS,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ffa500",style[mxConstants.STYLE_FILLCOLOR]="#ffdb99",this.editor.graph.getStylesheet().putCellStyle("running-rhombus",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RHOMBUS,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#648b30",style[mxConstants.STYLE_FILLCOLOR]="#8cc048",this.editor.graph.getStylesheet().putCellStyle("success-rhombus",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_RHOMBUS,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ff0f0f",style[mxConstants.STYLE_FILLCOLOR]="#ff4a4a",this.editor.graph.getStylesheet().putCellStyle("error-rhombus",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CLOUD,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,this.editor.graph.getStylesheet().putCellStyle("cloud",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CLOUD,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKECOLOR]="#c75d62",style[mxConstants.STYLE_FILLCOLOR]="#db9699",this.editor.graph.getStylesheet().putCellStyle("invalid-cloud",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CLOUD,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ffa500",style[mxConstants.STYLE_FILLCOLOR]="#ffdb99",this.editor.graph.getStylesheet().putCellStyle("running-cloud",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CLOUD,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#648b30",style[mxConstants.STYLE_FILLCOLOR]="#8cc048",this.editor.graph.getStylesheet().putCellStyle("success-cloud",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_CLOUD,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_RHOMBUS,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ff0f0f",style[mxConstants.STYLE_FILLCOLOR]="#ff4a4a",this.editor.graph.getStylesheet().putCellStyle("error-cloud",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_HEXAGON,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_HEXAGON,style[mxConstants.STYLE_FONTCOLOR]="black",style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR]="none",this.editor.graph.getStylesheet().putCellStyle("hexagon",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_HEXAGON,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_HEXAGON,style[mxConstants.STYLE_STROKECOLOR]="#c75d62",style[mxConstants.STYLE_FILLCOLOR]="#db9699",this.editor.graph.getStylesheet().putCellStyle("invalid-hexagon",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_HEXAGON,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_HEXAGON,style[mxConstants.STYLE_STROKEWIDTH]=4,style[mxConstants.STYLE_STROKECOLOR]="#ffa500",style[mxConstants.STYLE_FILLCOLOR]="#ffdb99",this.editor.graph.getStylesheet().putCellStyle("running-hexagon",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_HEXAGON,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_HEXAGON,style[mxConstants.STYLE_STROKECOLOR]="#648b30",style[mxConstants.STYLE_FILLCOLOR]="#8cc048",style[mxConstants.STYLE_STROKEWIDTH]=4,this.editor.graph.getStylesheet().putCellStyle("success-hexagon",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_HEXAGON,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_HEXAGON,style[mxConstants.STYLE_STROKECOLOR]="#ff0f0f",style[mxConstants.STYLE_FILLCOLOR]="#ff4a4a",style[mxConstants.STYLE_STROKEWIDTH]=4,this.editor.graph.getStylesheet().putCellStyle("error-hexagon",style),(style=new Object)[mxConstants.STYLE_SHAPE]=mxConstants.SHAPE_HEXAGON,style[mxConstants.STYLE_PERIMETER]=mxConstants.PERIMETER_HEXAGON,style[mxConstants.STYLE_STROKECOLOR]="#a462d6",style[mxConstants.STYLE_FILLCOLOR]="#c79fe6",this.editor.graph.getStylesheet().putCellStyle("customized-workflow",style)}initEditorTemplates(){this.addEditorTemplate("process",'<Process label="'+flexygo.localization.translate("flxgipe.editortemplates.process")+'" description="" fgid="" ><mxCell style="invalid-rectangle" vertex="1" ><mxGeometry as="geometry" width="108" height="48" /></mxCell></Process>'),this.addEditorTemplate("object",'<Object label="'+flexygo.localization.translate("flxgipe.editortemplates.object")+'" description="" fgid=""><mxCell vertex="1" style="invalid-ellipse"><mxGeometry as="geometry" width="48" height="48" /></mxCell></Object>'),this.addEditorTemplate("decission",'<Decission label="'+flexygo.localization.translate("flxgipe.editortemplates.decission")+'" description="" fgid=""><mxCell vertex= "1" style="invalid-rhombus"><mxGeometry as="geometry" width="108" height="48" /></mxCell></Decission>'),this.addEditorTemplate("event",'<Event label="'+flexygo.localization.translate("flxgipe.editortemplates.event")+'" description="" fgid=""><mxCell vertex= "1" style="invalid-cloud"><mxGeometry as="geometry" width="108" height="48" /></mxCell></Event>'),this.addEditorTemplate("label",'<Label label="'+flexygo.localization.translate("flxgipe.editortemplates.label")+'" description=""><mxCell vertex= "1" style="label" connectable="0"><mxGeometry as="geometry" width="108" height="48" /></mxCell></Label>'),this.addEditorTemplate("group",'<Group label="" description="" ><mxCell vertex="1" style="group" connectable="0"/></Group>'),this.addEditorTemplate("relation",'<Relation label="" description=""><mxCell edge="1"><mxGeometry as="geometry" relative="1"/></mxCell></Relation>'),this.addEditorTemplate("workflow",'<Workflow label="'+flexygo.localization.translate("flxgipe.editortemplates.workflow")+'" description="" fgid=""><mxCell vertex="1" style="invalid-hexagon" connectable="1"><mxGeometry as="geometry" width="108" height="108"/></mxCell></Workflow>')}addEditorTemplate(name,xmlString){let doc=mxUtils.parseXml(xmlString),template=new mxCodec(doc).decodeCell(doc.documentElement);this.editor.addTemplate(name,template)}initEditorPopupMenu(){let self=this,graph=this.editor.graph;graph.popupMenuHandler.factoryMethod=function(menu,cell,evt){if(self.popupCell=null,0===self.currentExecutionId)if(cell){let hasId=cell.value.hasAttribute("fgid")&&cell.value.getAttribute("fgid").length>0;menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.properties"),null,function(){self.showCellProperties(cell)},null,"fa fa-gear"),"workflow"===cell.value.localName.toLowerCase()&&hasId&&(menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.enter"),null,function(){self.goDown()},null,"flx-icon icon-arrow-2"),menu.addSeparator()),hasId?(menu.addSeparator(),menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.view"),null,function(){self.viewCell(cell)},null,"flx-icon icon-eye"),"workflow"!==cell.value.localName.toLowerCase()&&"process"!==cell.value.localName.toLowerCase()&&"decission"!==cell.value.localName.toLowerCase()||menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.listparams"),null,function(){self.listParamsCell(cell)},null,"flx-icon icon-bullet-list")):(menu.addSeparator(),menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.new"),null,function(){self.newCell(cell)},null,"flx-icon icon-new"))}else{if(null===self.workflow)return;menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.workflowproperties"),null,function(){self.showWorkflowProperties()},null,"fa fa-gear"),menu.addSeparator(),cell=graph.getModel().cells[0],menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.view"),null,function(){self.viewCell(cell)},null,"flx-icon icon-eye"),menu.addItem(flexygo.localization.translate("flxgipe.popupmenu.listparams"),null,function(){self.listParamsCell(cell)},null,"flx-icon icon-bullet-list")}}}initEditorToolbar(){var container=document.getElementById("gipetoolbar"),toolbar=new mxDefaultToolbar(container,this.editor);let btn=null;btn=toolbar.addItem("",null,"new"),$(btn).append('<i class="flx-icon icon-new" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.new")),btn=toolbar.addItem("",null,"open"),$(btn).append('<i class="fa fa-folder-open" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.open")),btn=toolbar.addItem("",null,"save"),$(btn).append('<i class="fa fa-save" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.save")),btn=toolbar.addItem("",null,"generate"),$(btn).append('<i class="fa fa-arrow-circle-o-right" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.generate")),btn=toolbar.addItem("",null,"run"),$(btn).append('<i class="flx-icon icon-arrow-head-3" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.run")),btn=toolbar.addItem("",null,"debug"),$(btn).append('<i class="fa fa-play-circle" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.debug")),toolbar.addSeparator(),this.versionCombo=toolbar.addCombo(),$(this.versionCombo).on("click",e=>{let val=$(this.versionCombo).val();val&&""!==val&&val!=this.workflow.Version&&this.loadWorkflow(this.workflow.WorkflowId,val,!1)}),toolbar.addSeparator(),(btn=toolbar.addItem("",null,"up")).setAttribute("data-action","up"),$(btn).append('<i class="fa fa-expand" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.up")),(btn=toolbar.addItem("",null,"down")).setAttribute("data-action","down"),$(btn).append('<i class="fa fa-compress" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.down")),toolbar.addSeparator(),btn=toolbar.addMode("",null,"select"),$(btn).append('<i class="fa fa-mouse-pointer" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.select")),btn=toolbar.addMode("",null,"pan"),$(btn).append('<i class="fa fa-hand-pointer-o" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.pan")),toolbar.addSeparator(),btn=toolbar.addItem("",null,"undo"),$(btn).append('<i class="fa fa-undo" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.undo")),btn=toolbar.addItem("",null,"redo"),$(btn).append('<i class="fa fa-repeat" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.redo")),toolbar.addSeparator(),btn=toolbar.addItem("",null,"cut"),$(btn).append('<i class="fa fa-cut" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.cut")),btn=toolbar.addItem("",null,"copy"),$(btn).append('<i class="fa fa-copy" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.copy")),btn=toolbar.addItem("",null,"paste"),$(btn).append('<i class="fa fa-paste" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.paste")),btn=toolbar.addItem("",null,"delete"),$(btn).append('<i class="fa fa-times-circle" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.delete")),toolbar.addSeparator(),btn=toolbar.addItem("",null,"group"),$(btn).append('<i class="fa fa fa-object-group" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.group")),btn=toolbar.addItem("",null,"ungroup"),$(btn).append('<i class="fa fa fa-object-ungroup" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.ungroup")),toolbar.addSeparator(),toolbar.addPrototype(flexygo.localization.translate("flxgipe.editortoolbar.label"),"js/plugins/mxgraph/images/text.gif",this.editor.templates.label),toolbar.addPrototype(flexygo.localization.translate("flxgipe.editortoolbar.workflow"),"js/plugins/mxgraph/images/hexagon.gif",this.editor.templates.workflow),toolbar.addPrototype(flexygo.localization.translate("flxgipe.editortoolbar.object"),"js/plugins/mxgraph/images/ellipse.gif",this.editor.templates.object),toolbar.addPrototype(flexygo.localization.translate("flxgipe.editortoolbar.process"),"js/plugins/mxgraph/images/rectangle.gif",this.editor.templates.process),toolbar.addPrototype(flexygo.localization.translate("flxgipe.editortoolbar.decission"),"js/plugins/mxgraph/images/rhombus.gif",this.editor.templates.decission),toolbar.addPrototype(flexygo.localization.translate("flxgipe.editortoolbar.event"),"js/plugins/mxgraph/images/cloud.gif",this.editor.templates.event),toolbar.addMode(flexygo.localization.translate("flxgipe.editortoolbar.connect"),"js/plugins/mxgraph/images/connect.gif","connect"),toolbar.addSeparator(),btn=toolbar.addItem("",null,"fit"),$(btn).append('<i class="fa fa-square-o" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.fit")),btn=toolbar.addItem("",null,"zoomIn"),$(btn).append('<i class="fa fa-search-plus" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.zoomin")),btn=toolbar.addItem("",null,"zoomOut"),$(btn).append('<i class="fa fa-search-minus" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.zoomout")),btn=toolbar.addItem("",null,"actualSize"),$(btn).append('<i class="fa fa-search" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.actualsize")),toolbar.addSeparator(),btn=toolbar.addItem("",null,"templates"),$(btn).append('<i class="fa fa-tasks" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.templates")),btn=toolbar.addItem("",null,"properties"),$(btn).append('<i class="fa fa-gear" />').attr("title",flexygo.localization.translate("flxgipe.editortoolbar.properties")),$(btn).attr("data-btn","properties")}initEditorKeyHandler(){this.editor.keyHandler.bindAction(8,"collapse"),this.editor.keyHandler.bindAction(13,"expand"),this.editor.keyHandler.bindAction(33,"exitGroup"),this.editor.keyHandler.bindAction(34,"enterGroup"),this.editor.keyHandler.bindAction(35,"refresh"),this.editor.keyHandler.bindAction(36,"home"),this.editor.keyHandler.bindAction(37,"selectPrevious"),this.editor.keyHandler.bindAction(38,"selectParent"),this.editor.keyHandler.bindAction(40,"selectChild"),this.editor.keyHandler.bindAction(39,"selectNext"),this.editor.keyHandler.bindAction(46,"delete"),this.editor.keyHandler.bindAction(113,"edit"),this.editor.keyHandler.bindAction(107,"zoomIn"),this.editor.keyHandler.bindAction(109,"zoomOut"),this.editor.keyHandler.bindAction(65,"selectAll",!0),this.editor.keyHandler.bindAction(90,"undo",!0),this.editor.keyHandler.bindAction(89,"redo",!0),this.editor.keyHandler.bindAction(88,"cut",!0),this.editor.keyHandler.bindAction(67,"copy",!0),this.editor.keyHandler.bindAction(86,"paste",!0),this.editor.keyHandler.bindAction(71,"group",!0),this.editor.keyHandler.bindAction(85,"ungroup",!0),this.editor.keyHandler.bindAction(115,"showProperties")}initEditorMouseHandler(){let editor=this.editor;mxEvent.addMouseWheelListener((evt,up)=>{if(!mxEvent.isConsumed(evt)){let consume=!1,elem=evt.srcElement;for(;elem;)elem.hasAttribute("id")&&"gipegraph"===elem.getAttribute("id")&&(consume=!0,elem=null),elem&&(elem=elem.parentElement);consume&&(up?editor.execute("zoomIn"):editor.execute("zoomOut"),mxEvent.consume(evt))}})}doDropTemplate(ui){let w,h,type=parseInt(ui.draggable.attr("data-type")),id=ui.draggable.attr("data-id"),descrip=ui.draggable.attr("data-descrip"),style=null,value=null;switch(type){case 1:style="ellipse",w=48,h=48,value=this.editor.templates.object.value.cloneNode(!0);break;case 2:style="rounded",w=108,h=48,value=this.editor.templates.process.value.cloneNode(!0);break;case 3:style="rhombus",w=108,h=48,value=this.editor.templates.decission.value.cloneNode(!0);break;case 4:style="hexagon",w=108,h=108,value=this.editor.templates.workflow.value.cloneNode(!0);break;case 5:style="cloud",w=108,h=48,value=this.editor.templates.event.value.cloneNode(!0);break;case 6:style="label",w=108,h=48,value=this.editor.templates.label.value.cloneNode(!0)}if(type&&style&&id){let parent=this.editor.graph.getDefaultParent();this.editor.graph.getModel().beginUpdate();try{let x=ui.position.left-$("#gipegraph").position().left;x<0&&(x=0);let y=ui.position.top-$("#gipegraph").position().top;y<0&&(y=0),value.setAttribute("fgid",id),value.setAttribute("label",descrip),this.editor.graph.insertVertex(parent,null,value,x,y,w,h,style)}finally{this.editor.graph.getModel().endUpdate()}}}setGraphSize(){let module=$(this).closest("flx-module"),height=0,toolbarHeight=module.find("#gipetoolbar").outerHeight();toolbarHeight<35&&(toolbarHeight=35);let graphMargin=$("#gipegraph").outerHeight(!0)-$("#gipegraph").outerHeight();if(module.hasClass("fullscreen"))height=module.outerHeight()-toolbarHeight-graphMargin;else{let doubleMargin=2*($("#realMain").outerHeight(!0)-$("#realMain").outerHeight()),headerHeight=module.find(".cntHeader").outerHeight();height=$("#mainContent").height()-doubleMargin-headerHeight-toolbarHeight-graphMargin}$(this).find("#gipegraph").height(height)}refresh(){this.render()}goUp(level){let exec=()=>{for(;this.workflowStack.length>level;)this.workflow=this.workflowStack.pop();this.loadWorkflow(this.workflow.WorkflowId,this.workflow.Version,!1)};this.workflowStack&&this.workflowStack.length>0&&(!0===this.editor.isModified()?flexygo.msg.confirm(flexygo.localization.translate("flxgipe.confirmunsavedchanges"),ret=>{!0===ret&&exec()}):exec())}goDown(){let selected=this.editor.graph.getSelectionCells();if(selected&&1===selected.length){let cell=selected[0];if(cell.value&&"Workflow"===cell.value.localName){let wfid=cell.value.getAttribute("fgid");!0===this.editor.isModified()?flexygo.msg.confirm(flexygo.localization.translate("flxgipe.confirmunsavedchanges"),ret=>{!0===ret&&this.loadWorkflow(wfid,-1,!0)}):this.loadWorkflow(wfid,-1,!0)}}}runWorkflow(){this.workflow?flexygo.ajax.post("~/api/Gipe","runWorkflow",{workflowId:this.workflow.WorkflowId,version:this.workflow.Version},ret=>{}):flexygo.msg.error(flexygo.localization.translate("flxgipe.errornoworkflowselected"),null,flexygo.localization.translate("flxgipe.dialogruntitle"))}startDebugWorkflow(){this.workflow?0===this.currentExecutionId?(this.debugDialog||this.openDebugDialog(),$(this.debugDialog.content).find('button[name="dbg-stepinto"]').prop("disabled",!0),$(this.debugDialog.content).find('button[name="dbg-stepover"]').prop("disabled",!0),flexygo.ajax.post("~/api/Gipe","debugWorkflow",{workflowId:this.workflow.WorkflowId,version:this.workflow.Version,executionId:this.currentExecutionId,stepOver:!1},execId=>{var tree=$("#gipe-debug-tree");let mainNode={text:this.workflow.Descrip,icon:"flx-icon flx-icon-share"};$.jstree.defaults.core.data=mainNode,$(tree).jstree(),this.debugStack=[],this.workflow.ExecutionId=execId,this.debugWorkflow=this.workflow,this.currentExecutionId=execId,this.debugWorkflow.WorkflowData=this.editor.writeGraphModel(null),this.debugStack.push(this.debugWorkflow),this.updateToolbarStatus(),this.onDebugStepChanged()})):flexygo.msg.error(flexygo.localization.translate("flxgipe.errorallreadydebugging"),null,flexygo.localization.translate("flxgipe.dialogruntitle")):flexygo.msg.error(flexygo.localization.translate("flxgipe.errornoworkflowselected"),null,flexygo.localization.translate("flxgipe.dialogruntitle"))}openLoadDialog(){let content=$("<div></div>"),areaFilter="",moduleFilter="",workflowFilter="",loadTemplate=`\n                <div class="col-12" style="position:relative">\n                    <label class="control-label ">${flexygo.localization.translate("flxgipe.labelarea")}</label>\n                    <flx-dbcombo name="areaId" ObjectName="sysWorkflow" ViewName="areasView" SQLValueField="WorkflowAreaId" SQLDisplayField="Descrip" placeholder="${flexygo.localization.translate("flxgipe.workflowareaplaceholder")}"/>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelmodule")}</label>\n                    <flx-dbcombo name="moduleId" ObjectName="sysWorkflow" ViewName="modulesView" SQLValueField="WorkflowModuleId" SQLDisplayField="Descrip"  placeholder="${flexygo.localization.translate("flxgipe.workflowmoduleplaceholder")}"/>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelname")}</label>\n                    <flx-dbcombo name="workflowid" ObjectName="sysWorkflow" ViewName="defaultWorkflowView" SQLValueField="WorkflowId" SQLDisplayField="Descrip"  placeholder="${flexygo.localization.translate("flxgipe.workflownameplaceholder")}"/>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelversion")}</label>\n                    <flx-dbcombo name="version" ObjectName="sysWorkflow" ViewName="versionsView" SQLValueField="Version" SQLDisplayField="Descrip" additionalWhere ="1=0" placeholder="${flexygo.localization.translate("flxgipe.workflowversionplaceholder")}"/>\n                </div>\n                <div class="fgWindowToolbar">\n                    <button class="btn btn-sm bg-info loadButton"><i class="flx-icon icon-load"></i>${flexygo.localization.translate("flxgipe.buttonload")}</button>\n                    <button class="btn btn-sm bg-danger closeButton"><i class="flx-icon icon-remove"></i>${flexygo.localization.translate("flxgipe.buttoncancel")}</button>\n                </div>\n            `;content.append(loadTemplate);let cboArea=content.find('flx-dbcombo[name="areaId"]')[0],cboModule=content.find('flx-dbcombo[name="moduleId"]')[0],cboWorkflow=content.find('flx-dbcombo[name="workflowid"]')[0],cboVersion=content.find('flx-dbcombo[name="version"]')[0];$(cboArea).on("change",e=>{let val=cboArea.getValue();areaFilter=val&&val.length>0?"areaId='"+val+"'":"",cboWorkflow.additionalWhere=this.concatWhere(areaFilter,moduleFilter),cboWorkflow.setValue(""),cboWorkflow.refresh()}),$(cboModule).on("change",e=>{let val=cboModule.getValue();moduleFilter=val&&val.length>0?"moduleId='"+val+"'":"",cboWorkflow.additionalWhere=this.concatWhere(areaFilter,moduleFilter),cboWorkflow.setValue(""),cboWorkflow.refresh()}),$(cboWorkflow).on("change",e=>{let val=e.currentTarget.getValue();workflowFilter=val&&val.length>0?"workflowId='"+val+"'":"",cboVersion.additionalWhere=workflowFilter,cboVersion.refresh(),flexygo.ajax.post("~/api/Gipe","getActiveVersion",{workflowId:val},ret=>{ret&&ret.length>0&&cboVersion.setValue(ret)})});let wnd=new mxWindow(flexygo.localization.translate("flxgipe.dialogloadtitle"),content[0],window.outerWidth/2-150,window.outerHeight/2-200,300,400,!1,!0,null,"fgWindow");wnd.setMaximizable(!1),wnd.setScrollable(!0),wnd.setResizable(!1),wnd.setClosable(!0),wnd.setVisible(!0),content.find("button.loadButton").on("click",e=>{let id=cboWorkflow.getValue();if(id){let ver=cboVersion.getValue();!ver||ver&&0===ver.length?flexygo.msg.error(flexygo.localization.translate("flxgipe.errornoversionselected"),null,flexygo.localization.translate("flxgipe.dialogloadtitle")):(this.workflowStack=[],this.loadWorkflow(id,parseInt(ver)),wnd.destroy())}else flexygo.msg.error(flexygo.localization.translate("flxgipe.errornoworkflowselected"),null,flexygo.localization.translate("flxgipe.dialogloadtitle"))}),content.find("button.closeButton").on("click",e=>{wnd.destroy()}),wnd.addListener(mxEvent.DESTROY,(sender,object)=>{this.destroyDialog()}),this.showDialog(wnd)}showDialog(window){this.dialog=window,this.updateToolbarStatus()}showPropertiesDialog(window){this.propertiesDialog=window,this.updateToolbarStatus()}showDebugDialog(window){this.debugDialog=window,this.updateToolbarStatus()}destroyDialog(){this.dialog=null,this.updateToolbarStatus()}destroyPropertiesDialog(){this.propertiesDialog=null,this.updateToolbarStatus()}destroyDebugDialog(){this.debugDialog=null,this.updateToolbarStatus()}loadWorkflow(id,version,pushCurrent){let params={workflowId:id,version};flexygo.ajax.post("~/api/Gipe","loadWorkflow",params,ret=>{ret&&(!0===pushCurrent&&this.workflowStack.push(this.workflow),this.workflow=ret,this.render())})}loadDebugWorkflow(id,version,newExecutionId,debugInfo){let stackIndex=-1;this.debugStack.forEach((w,i)=>{if(w.ExecutionId===newExecutionId)return stackIndex=i,!1});let currentIndex=-1;if(this.debugStack.forEach((w,i)=>{if(w.ExecutionId===this.debugWorkflow.ExecutionId)return currentIndex=i,!1}),-1!==currentIndex){if(this.debugStack[currentIndex].WorkflowData=this.editor.writeGraphModel(null),-1===stackIndex){let params={workflowId:id,version};flexygo.ajax.syncPost("~/api/Gipe","loadWorkflow",params,ret=>{this.debugWorkflow=ret,this.debugWorkflow.ExecutionId=newExecutionId,this.debugStack.push(this.debugWorkflow)})}else this.debugWorkflow=this.debugStack[stackIndex];this.render(),this.updateDebugInfo(debugInfo)}else flexygo.msg.error("Current workflow not found on debug stack")}openSaveDialog(){let content=$("<div></div>"),current=this.workflow?this.workflow:{WorkflowId:"",ModuleId:"",AreaId:"",Descrip:"New workflow",Version:1,WorkflowData:null,Active:!0,Versions:[]},saveTemplate=`\n                <div class="col-12" style="position:relative">\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelarea")}</label>\n                    <flx-dbcombo name="dbc-areaid" value="${current.AreaId}" ObjectName="sysWorkflow" ViewName="areasView" SQLValueField="WorkflowAreaId" SQLDisplayField="Descrip" placeholder="${flexygo.localization.translate("flxgipe.workflowareaplaceholder")}"/>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelmodule")}</label>\n                    <flx-dbcombo name="dbc-moduleid" value="${current.ModuleId}" ObjectName="sysWorkflow" ViewName="modulesView" SQLValueField="WorkflowModuleId" SQLDisplayField="Descrip"  placeholder="${flexygo.localization.translate("flxgipe.workflowmoduleplaceholder")}"/>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelname")}</label>\n                    <flx-text name="dbc-wfid" value="${current.WorkflowId}" ${current.WorkflowId.length>0?'disabled="true"':""}/>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labeldescrip")}</label>\n                    <flx-text name="dbc-wfdescrip" value="${this.htmlEncode(current.Descrip)}" placeholder="${flexygo.localization.translate("flxgipe.workflownameplaceholder")}" />\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelactive")}</label>\n                    <flx-check name="dbc-wfactive" ${current.Active&&!0===current.Active?"checked":""}></flx-check>\n                </div>\n                <div class="fgWindowToolbar">\n                    <button class="btn btn-sm bg-info saveButton"><i class="flx-icon icon-save"></i>${flexygo.localization.translate("flxgipe.buttonsave")}</button>\n                    <button class="btn btn-sm bg-danger closeButton"><i class="flx-icon icon-remove"></i>${flexygo.localization.translate("flxgipe.buttoncancel")}</button>\n                </div>\n            `;content.append(saveTemplate);let wnd=new mxWindow(flexygo.localization.translate("flxgipe.dialogsavetitle"),content[0],window.outerWidth/2-150,window.outerHeight/2-200,300,400,!1,!0,null,"fgWindow");wnd.setMaximizable(!1),wnd.setScrollable(!0),wnd.setResizable(!1),wnd.setClosable(!0),wnd.setVisible(!0),content.find("button.saveButton").on("click",e=>{current.WorkflowId=content.find('[name="dbc-wfid"]')[0].getValue(),current.Descrip=content.find('[name="dbc-wfdescrip"]')[0].getValue(),current.ModuleId=content.find('[name="dbc-moduleid"]')[0].getValue(),current.AreaId=content.find('[name="dbc-areaid"]')[0].getValue(),current.Active=content.find('[name="dbc-wfactive"]')[0].getValue();let wf=this.editor.graph.getModel().cells[0].value;wf.setAttribute("fgid",current.WorkflowId),wf.setAttribute("description",current.Descrip),current.WorkflowData=this.editor.writeGraphModel(null),flexygo.ajax.post("~/api/Gipe","saveWorkflow",current,ret=>{ret&&(flexygo.msg.success(flexygo.localization.translate("flxgipe.messages.workflowsaved")),wnd.destroy(),this.workflow=ret,this.render())})}),content.find("button.closeButton").on("click",e=>{wnd.destroy()}),wnd.addListener(mxEvent.DESTROY,(sender,object)=>{this.destroyDialog()}),this.showDialog(wnd)}newWorkflow(){this.workflow=null,this.workflowStack=[],this.debugStack=[],this.render()}generateWorkflow(){this.workflow&&this.workflow.WorkflowId&&this.workflow.WorkflowId.length>0?flexygo.ajax.post("~/api/Gipe","generateWorkflow",{workflowId:this.workflow.WorkflowId,Version:this.workflow.Version},ret=>{ret&&!0===ret&&flexygo.msg.success(flexygo.localization.translate("flxgipe.messages.workflowgenerated"))}):flexygo.msg.error(flexygo.localization.translate("flxgipe.messages.savefirst"))}openTemplateDialog(){let filterContent=$("<tr></tr>"),listContent=$("<div></div>");this.templateFilter={name:"",areaId:null,originId:null,objects:!0,processes:!0,decissions:!0,workflows:!0,events:!0};let filterTemplae=`\n                <div id="GipeTemplateDialogPanel" class="col-12">\n                    <div class="templateFilterPanel" style="position:relative">\n                        <flx-dbcombo id="gcp-tf-cbo-area" ObjectName="sysWorkflow" ViewName="areasView" SQLValueField="WorkflowAreaId" SQLDisplayField="Descrip" placeholder="${flexygo.localization.translate("flxgipe.workflowareaplaceholder")}"/>\n                        <flx-dbcombo id="gcp-tf-cbo-origin" ObjectName="sysWorkflow" ViewName="originsView" SQLValueField="OriginId" SQLDisplayField="Descrip" placeholder="${flexygo.localization.translate("flxgipe.workfloworiginplaceholder")}"/>\n                        <div class="col-12 templateFilterPanelButtons">\n                            <button id="gcp-tf-btn-object" type="button" title="${flexygo.localization.translate("flxgipe.editortemplates.object")}" class="btn btn-lg active" aria-pressed="true" data-toggle="button">\n                              <i class="flx-icon icon-object"></i>\n                            </button>\n                            <button id="gcp-tf-btn-process" type="button" title="${flexygo.localization.translate("flxgipe.editortemplates.process")}" class="btn btn-lg active" aria-pressed="true" data-toggle="button">\n                              <i class="flx-icon icon-process"></i>\n                            </button>\n                            <button id="gcp-tf-btn-decission" type="button" title="${flexygo.localization.translate("flxgipe.editortemplates.decission")}" class="btn btn-lg active" aria-pressed="true" data-toggle="button">\n                              <i class="flx-icon icon-expand"></i>\n                            </button>\n                            <button id="gcp-tf-btn-workflow" type="button" title="${flexygo.localization.translate("flxgipe.editortemplates.workflow")}" class="btn btn-lg active" aria-pressed="true" data-toggle="button">\n                              <i class="flx-icon icon-flow-chart"></i>\n                            </button>\n                            <button id="gcp-tf-btn-event" type="button" title="${flexygo.localization.translate("flxgipe.editortemplates.event")}" class="btn btn-lg active" aria-pressed="true" data-toggle="button">\n                              <i class="flx-icon icon-wifi"></i>\n                            </button>\n                            <button id="gcp-tf-btn-all" type="button" title="${flexygo.localization.translate("flxgipe.editortemplates.toggleall")}" class="btn btn-lg active" aria-pressed="true" data-toggle="button">\n                              <i class="flx-icon icon-select"></i>\n                            </button>\n                        </div>\n                        <flx-text id="gcp-tf-txt-name" class="searchInput" placeholder="${flexygo.localization.translate("flxgipe.searchtemplates")}" iconclass="flx-icon icon-search" />\n                    </div>\n                    \n                </div>`;filterContent.append(filterTemplae),listContent.append('\n                    <div style="clear:both">\n                    </div>\n                    <div id="GipeTemplateList">\n                        <ul class="connectedSortable">\n                        </ul>\n                    </div>\n            '),filterContent.find("#gcp-tf-cbo-area").off("change").on("change",e=>{let cbo=$(e.currentTarget);this.templateFilter.areaId=cbo.val()&&cbo.val().length>0?cbo.val():null,this.updateTemplateFilter()}),filterContent.find("#gcp-tf-cbo-origin").off("change").on("change",e=>{let cbo=$(e.currentTarget);this.templateFilter.originId=cbo.val()&&cbo.val().length>0?parseInt(cbo.val()):null,this.updateTemplateFilter()}),filterContent.find("#gcp-tf-txt-name").off("keyup").on("keyup",e=>{this.templateFilter.name=$(e.currentTarget).val(),this.updateTemplateFilter()}),filterContent.find("#gcp-tf-btn-object").off("click").on("click",e=>{this.templateFilter.objects=!this.templateFilter.objects,this.updateTemplateFilter()}),filterContent.find("#gcp-tf-btn-process").off("click").on("click",e=>{this.templateFilter.processes=!this.templateFilter.processes,this.updateTemplateFilter()}),filterContent.find("#gcp-tf-btn-decission").off("click").on("click",e=>{this.templateFilter.decissions=!this.templateFilter.decissions,this.updateTemplateFilter()}),filterContent.find("#gcp-tf-btn-workflow").off("click").on("click",e=>{this.templateFilter.workflows=!this.templateFilter.workflows,this.updateTemplateFilter()}),filterContent.find("#gcp-tf-btn-event").off("click").on("click",e=>{this.templateFilter.events=!this.templateFilter.events,this.updateTemplateFilter()}),filterContent.find("#gcp-tf-btn-all").off("click").on("click",e=>{let setted=!("true"===$(e.currentTarget).attr("aria-pressed"));$("#gcp-tf-btn-object").hasClass("active")!==setted&&$("#gcp-tf-btn-object").button("toggle"),$("#gcp-tf-btn-process").hasClass("active")!==setted&&$("#gcp-tf-btn-process").button("toggle"),$("#gcp-tf-btn-decission").hasClass("active")!==setted&&$("#gcp-tf-btn-decission").button("toggle"),$("#gcp-tf-btn-workflow").hasClass("active")!==setted&&$("#gcp-tf-btn-workflow").button("toggle"),$("#gcp-tf-btn-event").hasClass("active")!==setted&&$("#gcp-tf-btn-event").button("toggle"),this.templateFilter.objects=setted,this.templateFilter.processes=setted,this.templateFilter.decissions=setted,this.templateFilter.workflows=setted,this.templateFilter.events=setted,this.updateTemplateFilter()});let wnd=new mxWindow(flexygo.localization.translate("flxgipe.dialogtemplatetitle"),listContent[0],window.outerWidth/2-150,window.outerHeight/2-200,300,400,!1,!0,null,"fgWindow");$(wnd.title).parent().after(filterContent);let list=listContent.find("#GipeTemplateList ul");flexygo.ajax.post("~/api/Gipe","getTemplates",null,ret=>{ret.forEach(e=>{list.append(`\n                        <li data-type="${e.NodeType}" data-id="${e.NodeKey}" data-descrip="${e.NodeDescrip}" data-originid="${e.NodeOriginId}" data-areas="${e.NodeAreas}" class="templateItem nolist">\n                            <div class="box-primary">\n                                <div class="listDescrip">\n                                    <i title="${e.NodeDescrip}" class="${e.NodeIcon} icon-lg"></i>\n                                    <span class="modDesc">${e.NodeDescrip}</span>\n                                </div>\n                            </div>\n                        </li>\n                    `)}),list.find("li").draggable({appendTo:"body",containment:$("#gipegraph"),helper:"clone"})}),wnd.setMaximizable(!1),wnd.setScrollable(!0),wnd.setResizable(!0),wnd.setClosable(!0),wnd.setVisible(!0),wnd.addListener(mxEvent.DESTROY,(sender,object)=>{this.destroyDialog()}),this.showDialog(wnd)}updateTemplateFilter(){let content=$(document).find("#GipeTemplateList");content.find("li[data-descrip]").hide();let filter=this.templateFilter;console.log("updateTemplateFilter",filter);let filterTypes="";!0===filter.objects&&(filterTypes+="1"),!0===filter.processes&&(filterTypes+="2"),!0===filter.decissions&&(filterTypes+="3"),!0===filter.workflows&&(filterTypes+="4"),!0===filter.events&&(filterTypes+="5");let filterName=(filter.name||"").toLowerCase(),filterArea=(filter.areaId||"").toLowerCase();content.find("li[data-descrip]").filter(function(){let e=$(this),visible=!0;return filterName.length>0&&(visible=-1!==e.attr("data-descrip").toLowerCase().indexOf(filterName)),!0===visible&&!0==(visible=-1!==filterTypes.indexOf(e.attr("data-type")))&&(null!==filter.originId&&(visible=parseInt(e.attr("data-originid"))===filter.originId),!0===visible&&filterArea.length>0&&(visible=e.attr("data-areas").toLowerCase()==filterArea)),visible}).show()}onModuleResize(e){let module=e.sender,mine=$(this).closest("flx-module")[0];module.moduleName===mine.moduleName&&this.setGraphSize()}openDebugDialog(){let content=$("<div></div>"),debugTemplate=`\n                <div class="gipetoolbar" id="gipedebugtoolbar">\n                    <button name="dbg-stepinto"><i class="fa fa-step-forward" /></button>\n                    <button name="dbg-stepover"><i class="fa fa-fast-forward" /></button>\n                    <button name="dbg-stop"><i class="fa fa-stop" /></button>\n                </div>\n                <div class="col-12">\n                    <div class="col-6">\n                        <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelstatus")}</label>\n                        <flx-text id="gipedbg-status"/>\n                    </div>                    \n                    <div class="col-6">\n                        <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelresult")}</label>\n                        <flx-text id="gipedbg-result"/>\n                    </div>\n                </div>\n                <div class="col-12">\n                    <div id="gipe-debug-tree" />\n                </div>\n            `;content.append(debugTemplate);let wnd=new mxWindow(flexygo.localization.translate("flxgipe.dialogdebugtitle"),content[0],window.outerWidth/2-150,window.outerHeight/2-200,300,400,!1,!0,null,"fgWindow");wnd.setMaximizable(!1),wnd.setScrollable(!0),wnd.setResizable(!0),wnd.setClosable(!0),wnd.setVisible(!0),content.find('button[name="dbg-stepinto"]').on("click",e=>{0!==this.currentExecutionId?(content.find('button[name="dbg-stepinto"]').prop("disabled",!0),content.find('button[name="dbg-stepover"]').prop("disabled",!0),flexygo.ajax.post("~/api/Gipe","debugWorkflow",{workflowId:this.workflow.WorkflowId,version:this.workflow.Version,executionId:this.currentExecutionId,stepOver:!1},ret=>{})):flexygo.msg.error(flexygo.localization.translate("flxgipe.errornocurrentexecution"))}),content.find('button[name="dbg-stepover"]').on("click",e=>{0!==this.currentExecutionId?(content.find('button[name="dbg-stepinto"]').prop("disabled",!0),content.find('button[name="dbg-stepover"]').prop("disabled",!0),flexygo.ajax.post("~/api/Gipe","debugWorkflow",{workflowId:this.workflow.WorkflowId,version:this.workflow.Version,executionId:this.currentExecutionId,stepOver:!0},ret=>{})):flexygo.msg.error(flexygo.localization.translate("flxgipe.errornocurrentexecution"))}),content.find('button[name="dbg-stop"]').on("click",e=>{if(0!==this.currentExecutionId){var postParams={execId:this.currentExecutionId,stepId:0};flexygo.ajax.post("~/api/Gipe","abortExecution",postParams,ret=>{})}}),wnd.addListener(mxEvent.DESTROY,(sender,object)=>{if(this.destroyDebugDialog(),0!==this.currentExecutionId){var postParams={execId:this.currentExecutionId,stepId:0};flexygo.ajax.post("~/api/Gipe","abortExecution",postParams,ret=>{}),this.lastDebugGraphId=null,this.currentExecutionId=0,this.debugStack=[],this.updateToolbarStatus()}this.loadWorkflow(this.workflow.WorkflowId,this.workflow.Version,!1)}),this.showDebugDialog(wnd)}render(){let empty='<mxGraphModel>\n\t\t\t            <root>\n\t\t\t\t            <Workflow label="" description="" id="0"/>\n\t\t\t\t            <Layer label="Default Layer">\n\t\t\t\t\t            <mxCell parent="0"/>\n\t\t\t\t            </Layer>\n\t\t\t            </root>\n                    </mxGraphModel>\n                ',node=null,error="",current=null;(current=0===this.currentExecutionId?this.workflow:this.debugWorkflow)&&null!==current?(node=mxUtils.parseXml(current.WorkflowData)).getElementsByTagName("parsererror").length>0&&(error=node.getElementsByTagName("parsererror")[0].innerText,node=mxUtils.parseXml(empty)):node=mxUtils.parseXml(empty);let doc=node.documentElement;this.editor.readGraphModel(doc),this.updateToolbarStatus(),this.updateModuleTitle(),this.updateBreadcrumb(),this.updateComboVersions(),error.length>0&&flexygo.msg.error(error)}updateToolbarStatus(){let canAny,canGoDown,canGoUp,selected=this.editor.graph.getSelectionCells();if(!0==(canAny=!(null!==this.dialog))&&(canAny=0===this.currentExecutionId),canAny){if($(this).find("button.mxToolbarItem").prop("disabled",!1),0===selected.length)canGoDown=!1;else if(selected.length>1)canGoDown=!1;else{let cell=selected[0];canGoDown=!(!cell.value||"Workflow"!==cell.value.localName)}canGoUp=this.workflowStack.length>0;let btnUp=$(this).find('button[data-action="up"]'),btnDown=$(this).find('button[data-action="down"]');btnUp.prop("disabled",!canGoUp),btnDown.prop("disabled",!canGoDown)}else $(this).find("button.mxToolbarItem").prop("disabled",!0)}openPropertiesDialog(){let content=$("<div></div>"),wnd=new mxWindow(flexygo.localization.translate("flxgipe.dialogpropertiestitle"),content[0],window.outerWidth/2-150,window.outerHeight/2-200,500,400,!1,!0,null,"fgWindow");wnd.setMaximizable(!1),wnd.setScrollable(!0),wnd.setResizable(!0),wnd.setClosable(!0),wnd.setVisible(!0),wnd.addListener(mxEvent.DESTROY,(sender,object)=>{this.destroyPropertiesDialog()}),this.showPropertiesDialog(wnd)}showCellProperties(cell){if(this.propertiesDialog||this.openPropertiesDialog(),!cell)return void this.showWorkflowProperties();if(cell&&!0===cell.isEdge())return void this.showRelationProperties(cell);let content=$(this.propertiesDialog.content);content.empty();let cboParams=null;switch(cell.value.localName.toLowerCase()){case"process":cboParams={Label:flexygo.localization.translate("flxgipe.labelprocess"),ObjectName:"sysWorkflow",ViewName:"processesView",SQLValueField:"ProcessName",SQLDisplayField:"ProcessName"};break;case"object":cboParams={Label:flexygo.localization.translate("flxgipe.labelobject"),ObjectName:"sysWorkflow",ViewName:"objectsView",SQLValueField:"ObjectName",SQLDisplayField:"ObjectName"};break;case"decission":cboParams={Label:flexygo.localization.translate("flxgipe.labeldecission"),ObjectName:"sysWorkflow",ViewName:"decissionsView",SQLValueField:"ProcessName",SQLDisplayField:"ProcessName"};break;case"workflow":cboParams={Label:flexygo.localization.translate("flxgipe.labelworkflow"),ObjectName:"sysWorkflow",ViewName:"workflowsView",SQLValueField:"ProcessName",SQLDisplayField:"ProcessName"};break;case"event":cboParams={Label:flexygo.localization.translate("flxgipe.labelevent"),ObjectName:"sysWorkflow",ViewName:"eventsView",SQLValueField:"NodeKey",SQLDisplayField:"NodeDescrip"};break;case"label":cboParams={Label:flexygo.localization.translate("flxgipe.labellabel"),ObjectName:"sysWorkflow",ViewName:"labelsView",SQLValueField:"LabelName",SQLDisplayField:"LabelDescrip",backgroundColor:"",textColor:"",borderColor:""};let style=cell.style;if(-1!=style.indexOf(";")){let styles=style.split(";");for(let i=0;i<styles.length;i++)if(-1!=styles[i].indexOf("=")){let key=styles[i].split("=")[0],value=styles[i].split("=")[1];switch(key){case mxConstants.STYLE_FILLCOLOR:cboParams.backgroundColor=value;break;case mxConstants.STYLE_FONTCOLOR:cboParams.textColor=value;break;case mxConstants.STYLE_STROKECOLOR:cboParams.borderColor=value}}}break;default:return void flexygo.msg.error("Invalid value")}let propTemplate=`\n                <div class="col-12">\n                    <div class="col-6">\n                         <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelleft")}</label>\n                         <flx-text name="x" type="number" value="${cell.geometry.x}"/>\n                         <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelwidth")}</label>\n                         <flx-text name="w" type="number" value="${cell.geometry.width}"/>\n                    </div>\n                    <div class="col-6">\n                         <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labeltop")}</label>\n                         <flx-text name="y" type="number" value="${cell.geometry.y}"/>\n                         <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelheight")}</label>\n                         <flx-text name="h" type="number" value="${cell.geometry.height}"/>\n                    </div>\n                </div>\n                <div class="col-12" style="position:relative">\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labellabel")}</label>\n                    <flx-text name="l" value="${this.htmlEncode(cell.value.getAttribute("label"))}"/>\n                     ${"label"!=cell.value.localName.toLowerCase()?`\n                        <label class="control-label fgWindowLabel">${cboParams.Label}</label>\n                        <flx-dbcombo name="fgid" ObjectName="${cboParams.ObjectName}" ViewName="${cboParams.ViewName}" SQLDisplayField="${cboParams.SQLDisplayField}" SQLValueField="${cboParams.SQLValueField}" value="${cell.value.getAttribute("fgid")}" />\n                     `:`\n                     <div class="col-6">\n                       <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelbackgroundcolor")}</label>\n                        <flx-text name="backgroundColor" type="text" value="${cboParams.backgroundColor}"/>\n                     </div>\n                     <div class="col-6">\n                        <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelbordercolor")}</label>\n                        <flx-text name="borderColor" type="text" value="${cboParams.borderColor}"/>\n                     </div>\n                     <div class="col-6">\n                        <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labeltextcolor")}</label>\n                        <flx-text name="textColor" type="text" value="${cboParams.textColor}"/>\n                     </div>\n                     `}\n                </div>\n                <div class="fgWindowToolbar">\n                    <button class="btn btn-sm bg-info saveButton"><i class="flx-icon icon-save"></i>${flexygo.localization.translate("flxgipe.buttonsave")}</button>\n                    <button class="btn btn-sm bg-danger closeButton"><i class="flx-icon icon-remove"></i>${flexygo.localization.translate("flxgipe.buttoncancel")}</button>\n                </div>\n            `;content.append(propTemplate),content.find("button.closeButton").off("click").on("click",e=>{!1===this.fixedPropertiesDialog&&this.propertiesDialog.destroy()}),content.find("button.saveButton").off("click").on("click",e=>{let xField=content.find('flx-text[name="x"]')[0],yField=content.find('flx-text[name="y"]')[0],wField=content.find('flx-text[name="w"]')[0],hField=content.find('flx-text[name="h"]')[0],textColor=content.find('flx-text[name="textColor"]')[0],borderColor=content.find('flx-text[name="borderColor"]')[0],backgroundColor=content.find('flx-text[name="backgroundColor"]')[0],lblField=content.find('flx-text[name="l"]')[0],idField=content.find('flx-dbcombo[name="fgid"]')[0],graph=this.editor.graph,model=graph.getModel(),geo=cell.geometry,style="";var attrs=[],texts=[];attrs.push("label"),attrs.push("description"),attrs.push("fgid");let fgid=idField?idField.getValue():null;texts.push(lblField.getValue()),texts.push(cell.value.getAttribute("description")),texts.push(fgid);let okid=fgid&&fgid.length>0;switch(cell.value.localName.toLowerCase()){case"process":style=okid?"process":"invalid-process";break;case"object":style=okid?"ellipse":"invalid-ellipse";break;case"decission":style=okid?"rhombus":"invalid-rhombus";break;case"workflow":style=okid?"hexagon":"invalid-hexagon";break;case"event":style=okid?"cloud":"invalid-cloud";break;case"label":style="label",textColor.getValue()&&(style+=";"+mxConstants.STYLE_FONTCOLOR+"="+textColor.getValue()),backgroundColor.getValue()&&(style+=";"+mxConstants.STYLE_FILLCOLOR+"="+backgroundColor.getValue()),borderColor.getValue()&&(style+=";"+mxConstants.STYLE_STROKECOLOR+"="+borderColor.getValue());break;default:return void flexygo.msg.error("Invalid value")}model.beginUpdate();try{null!=geo&&((geo=geo.clone()).x=parseFloat(xField.getValue()),geo.y=parseFloat(yField.getValue()),geo.width=parseFloat(wField.getValue()),geo.height=parseFloat(hField.getValue()),model.setGeometry(cell,geo)),style.length>0?model.setStyle(cell,style):model.setStyle(cell,null);for(var i=0;i<attrs.length;i++){var edit=new mxCellAttributeChange(cell,attrs[i],texts[i]);model.execute(edit)}graph.isAutoSizeCell(cell)&&graph.updateCellSize(cell)}finally{model.endUpdate()}this.fixedPropertiesDialog||this.propertiesDialog.destroy()})}showRelationProperties(cell){this.propertiesDialog||this.openPropertiesDialog();let content=$(this.propertiesDialog.content);if(content.empty(),"string"==typeof cell.value)return;let targetCell=cell.target,model=this.editor.graph.getModel(),currentWorkflow=this.workflow,propTemplate=`\n                \n                <div class="col-12">\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labellabel")}</label>\n                    <flx-text name="l" value="${this.htmlEncode(cell.value.getAttribute("label"))}"/>\n                </div>\n\t\t\t\t<div name="parameters" class="col-12">\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelrelations")}</label>\n                </div>\n                <div name="gipeprops" class="col-12">\n                </div>\n\t\t\t\t<div class="fgWindowToolbar">\n                    <button class="btn btn-sm bg-info saveButton"><i class="flx-icon icon-save"></i>${flexygo.localization.translate("flxgipe.buttonsave")}</button>\n                    <button class="btn btn-sm bg-danger closeButton"><i class="flx-icon icon-remove"></i>${flexygo.localization.translate("flxgipe.buttoncancel")}</button>\n                </div>\n            `;content.append(propTemplate),content.find("button.closeButton").off("click").on("click",e=>{!1===this.fixedPropertiesDialog&&this.propertiesDialog.destroy()}),content.find("button.saveButton").off("click").on("click",e=>{let lblField=content.find('flx-text[name="l"]')[0],model=this.editor.graph.getModel(),value=this.editor.templates.relation.value.cloneNode(!0);content.find('label[data-name="propname"]').each((i,e)=>{let lblProp=$(e),prop=lblProp.attr("data-prop"),cboType=lblProp.parent().find(`select[data-name="parenttype"][data-prop="${prop}"]`),cboParent=lblProp.parent().find(`select[data-name="parentname"][data-prop="${prop}"]`),cboParam=lblProp.parent().find(`select[data-name="paramname"][data-prop="${prop}"]`),txtValue=cboType.parent().find(`input[data-name="txtvalue"][data-prop="${prop}"]`),type=cboType.val(),parent=cboParent.val(),param=cboParam.val(),defaultvalue=txtValue.val();if(type&&type.length>0){parent=parent&&parent.length>0?`parent="${parent}"`:"",param=param&&param.length>0?`parentparam="${param}"`:"",defaultvalue&&defaultvalue.length>0?(parent='parent="0"',defaultvalue=`defaultvalue="${defaultvalue}"`):defaultvalue="";let s=`<Parameter childparam="${prop}" type="${type}" ${parent} ${param} ${defaultvalue}></Parameter>`,r=mxUtils.parseXml(s);value.appendChild(r.documentElement)}}),model.beginUpdate();try{cell.setValue(value);var edit=new mxCellAttributeChange(cell,"label",lblField.getValue());model.execute(edit)}finally{model.endUpdate()}this.fixedPropertiesDialog||this.propertiesDialog.destroy()}),flexygo.ajax.post("~/api/Gipe","getNodeRelations",{nodeType:targetCell.value.nodeName,nodeName:targetCell.value.getAttribute("fgid")},ret=>{let parameters=cell.value.getElementsByTagName("Parameter"),divProps=content.find('div[name="gipeprops"]');ret.forEach(param=>{let parentvalue="",parentdescrip="",typevalue="",paramvalue="",defaultvalue="";$.each(parameters,(i,n)=>{n.getAttribute("childparam").toLowerCase()===param.ParamName.toLowerCase()&&(typevalue=n.getAttribute("type"),n.hasAttribute("parent")&&(parentvalue=model.getCell(n.getAttribute("parent")).id,parentdescrip=typevalue&&"workflow"==typevalue?currentWorkflow.WorkflowId:model.getCell(n.getAttribute("parent")).value.getAttribute("label"),paramvalue=n.getAttribute("parentparam")),defaultvalue=n.getAttribute("defaultvalue")||"")});let inputVisibleStr=defaultvalue&&defaultvalue.length>0?"":'style="display:none"',selectVisibleStr=inputVisibleStr&&inputVisibleStr.length>0?"":'style="display:none"',prop=param.ParamName,template=`\n                        <div class="col-12">        \n                            <label   class="col-3" data-name="propname" data-prop="${prop}">${param.ParamLabel}</label>\n                            <select  class="col-3" data-name="parenttype" data-prop="${prop}"><option value=""/><option value="workflow">Workflow</option><option value="node">Node</option><option value="value">Default value</option><option value="context">Context</option></select>\n                            <input  ${inputVisibleStr}  class="col-6" data-name="txtvalue" data-prop="${prop}"></input>\n                            <select ${selectVisibleStr} class="col-3" data-name="parentname" data-prop="${prop}"></select>\n                            <select ${selectVisibleStr} class="col-3" data-name="paramname"  data-prop="${prop}"></select>\n                        </div>`,parsed=$(template);""!==typevalue&&parsed.find('select[data-name="parenttype"]').val(typevalue),""!==parentvalue&&parsed.find('select[data-name="parentname"]').append(`<option value="${parentvalue}" selected>${parentdescrip}</option>`),""!==paramvalue&&parsed.find('select[data-name="paramname"]').append(`<option value="${paramvalue}" selected>${paramvalue}</option>`),""!==defaultvalue&&parsed.find('input[data-name="txtvalue"]').val(defaultvalue),divProps.append(parsed)}),divProps.find('select[data-name="parenttype"]').off("change").on("change",e=>{let cboType=$(e.currentTarget),prop=cboType.attr("data-prop"),cboParent=cboType.parent().find(`select[data-name="parentname"][data-prop="${prop}"]`),cboParam=cboType.parent().find(`select[data-name="paramname"][data-prop="${prop}"]`),txtValue=cboType.parent().find(`input[data-name="txtvalue"][data-prop="${prop}"]`);txtValue.hide(),cboParent.find("option").remove(),cboParam.find("option").remove();let nodes='<option value=""></option>';switch(cboType.val()){case"node":txtValue.hide(),txtValue.val(""),cboParent.show(),cboParam.show(),cboParent.prop("disabled",!1);for(let key in model.cells){let cell=model.cells[key];cell.isVertex()&&"label"!=cell.value.tagName.toLowerCase()&&(nodes+=`<option value="${cell.id}">${cell.value.getAttribute("label")}</option>`)}cboParent.append(nodes);break;case"workflow":txtValue.hide(),txtValue.val(""),cboParent.show(),cboParam.show(),cboParent.prop("disabled",!0),cboParent.append(`<option value="0" selected>${currentWorkflow.WorkflowId}</option>`),cboParam.html(),flexygo.ajax.post("~/api/Gipe","getNodeRelations",{nodeType:"workflow",nodeName:currentWorkflow.WorkflowId},ret=>{ret.forEach(param=>{nodes+=`<option value="${param.ParamName}">${param.ParamLabel}</option>`}),cboParam.append(nodes)});break;case"context":txtValue.hide(),txtValue.val(""),cboParent.hide(),cboParam.show(),cboParent.prop("disabled",!0),cboParam.html();for(let key in flexygo.context)nodes+=`<option value="key">${key}</option>`;cboParam.append(nodes);break;case"value":txtValue.show(),cboParent.hide(),cboParent.val(""),cboParam.hide(),cboParam.html(),txtValue.val("")}}),divProps.find('select[data-name="parentname"]').off("change").on("change",e=>{let cboParent=$(e.currentTarget),prop=cboParent.attr("data-prop"),cboType=cboParent.parent().find(`select[data-name="parenttype"][data-prop="${prop}"]`),cboParam=cboParent.parent().find(`select[data-name="paramname"][data-prop="${prop}"]`);cboParam.find("option").remove();let nodes='<option value=""></option>';switch(cboType.val()){case"node":let cell=model.getCell(cboParent.val());flexygo.ajax.post("~/api/Gipe","getNodeRelations",{nodeType:cell.value.localName,nodeName:cell.value.getAttribute("fgid")},ret=>{ret.forEach(param=>{nodes+=`<option value="${param.ParamName}">${param.ParamLabel}</option>`}),cboParam.append(nodes)})}})})}viewCell(cell){switch(cell.value.localName.toLowerCase()){case"process":case"decission":return void flexygo.nav.openPage("view","sysProcess","processName='"+cell.value.getAttribute("fgid")+"'",null,"popup1024x678");case"object":return void flexygo.nav.openPage("view","sysObject","objectName='"+cell.value.getAttribute("fgid")+"'",null,"popup1024x678");case"workflow":return void flexygo.nav.openPage("view","sysWorkflow","workflowId='"+cell.value.getAttribute("fgid")+"' AND Active=1",null,"popup1024x678");case"event":case"label":break;default:return void flexygo.msg.error("Invalid value")}}listParamsCell(cell){switch(cell.value.localName.toLowerCase()){case"process":case"decission":case"workflow":return void flexygo.nav.openPage("list","sysProcessParams","Processes_Params.ProcessName='"+cell.value.getAttribute("fgid")+"'",'{"ProcessName":"'+cell.value.getAttribute("fgid")+'"}',"popup1024x678");case"event":case"object":case"label":break;default:return void flexygo.msg.error("Invalid value")}}newCell(cell){flexygo.events.off(this,"entity","inserted"),this.popupCell=cell;let desc=null;switch(cell&&cell.value&&cell.value.attributes&&cell.value.attributes.label&&cell.value.attributes.label.value&&(desc=cell.value.attributes.label.value),cell.value.localName.toLowerCase()){case"process":return flexygo.nav.openPage("edit","sysProcess","",{ProcessDescrip:desc},"popup"),void flexygo.events.on(this,"entity","inserted",this.onEntityInserted);case"object":return flexygo.nav.openPageName("syspage-generic-objectwizard","sysObject","",null,"popup",!1),void flexygo.events.on(this,"entity","inserted",this.onEntityInserted);case"decission":return flexygo.nav.openPage("edit","sysProcess","",{typeId:"12",ProcessDescrip:desc},"popup1024x678"),void flexygo.events.on(this,"entity","inserted",this.onEntityInserted);case"workflow":return flexygo.nav.openPage("edit","sysProcess","",{typeId:"11",ProcessDescrip:desc},"popup1024x678"),void flexygo.events.on(this,"entity","inserted",this.onEntityInserted);case"event":case"label":break;default:return void flexygo.msg.error("Invalid value")}}onEntityInserted(e){if(flexygo.events.off(this,"entity","inserted"),!this.popupCell)return;let cell=this.popupCell,cellType=cell.value.localName.toLowerCase(),cellId=cell.value.getAttribute("fgid").toLowerCase();if(cellId&&cellId.length>0)return;let entity=e.sender,newId="",newLabel="";switch(entity.objectName.toLowerCase()){case"sysobject":switch(cellType){case"object":newId=entity.data.ObjectName.Value,newLabel=entity.data.Descrip.Value}break;case"sysprocess":let typeId=parseInt(entity.data.TypeId.Value);switch(cellType){case"process":11!==typeId&&12!==typeId&&(newId=entity.data.ProcessName.Value,newLabel=entity.data.ProcessDescrip.Value);break;case"decission":12===typeId&&(newId=entity.data.ProcessName.Value,newLabel=entity.data.ProcessDescrip.Value);break;case"workflow":11===typeId&&(newId=entity.data.ProcessName.Value,newLabel=entity.data.ProcessDescrip.Value)}}if(0===newId.length)return;let model=this.editor.graph.getModel();model.beginUpdate();try{let edit=new mxCellAttributeChange(cell,"fgid",newId);model.execute(edit),edit=new mxCellAttributeChange(cell,"label",newLabel),model.execute(edit);let style=this.getStepStyle(cell,"");style.length>0?model.setStyle(cell,style):model.setStyle(cell,null)}finally{model.endUpdate()}this.popupCell=null}showWorkflowProperties(){if(!this.workflow)return;this.propertiesDialog||this.openPropertiesDialog();let content=$(this.propertiesDialog.content);content.empty();let current=this.workflow,graph=this.editor.graph,model=graph.getModel(),cell=model.cells[0],propTemplate=`\n                <div class="col-12" style="position:relative">\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelname")}</label>\n                    <flx-text name="dbc-wfid" disabled="true" value="${current.WorkflowId}"></flx-text>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labeldescrip")}</label>\n                    <flx-text name="dbc-descrip" value="${this.htmlEncode(current.Descrip)}" placeholder="${flexygo.localization.translate("flxgipe.workflownameplaceholder")}"></flx-text>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelarea")}</label>\n                    <flx-dbcombo name="dbc-areaid" value="${current.AreaId}" ObjectName="sysWorkflow" ViewName="areasView" SQLValueField="WorkflowAreaId" SQLDisplayField="Descrip" placeholder="${flexygo.localization.translate("flxgipe.workflowareaplaceholder")}"></flx-dbcombo>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelmodule")}</label>\n                    <flx-dbcombo name="dbc-moduleid" value="${current.ModuleId}" ObjectName="sysWorkflow" ViewName="modulesView" SQLValueField="WorkflowModuleId" SQLDisplayField="Descrip"  placeholder="${flexygo.localization.translate("flxgipe.workflowmoduleplaceholder")}"></flx-dbcombo>\n                    <br/>\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labelactive")}</label>\n                    <flx-check name="dbc-active" ${current.Active&&!0===current.Active?"checked":""}></flx-check>\n                </div>\n                <div name="parameters" class="col-12">\n                    <label class="control-label fgWindowLabel">${flexygo.localization.translate("flxgipe.labeloutputparams")}</label>\n                </div>\n                <div name="gipeprops" class="col-12">\n                </div>\n                <div class="fgWindowToolbar">\n                    <button class="btn btn-sm bg-info saveButton"><i class="flx-icon icon-save"></i>${flexygo.localization.translate("flxgipe.buttonsave")}</button>\n                    <button class="btn btn-sm bg-danger closeButton"><i class="flx-icon icon-remove"></i>${flexygo.localization.translate("flxgipe.buttoncancel")}</button>\n                </div>\n              \n            `;content.append(propTemplate),content.find("button.closeButton").off("click").on("click",e=>{!1===this.fixedPropertiesDialog&&this.propertiesDialog.destroy()}),content.find("button.saveButton").off("click").on("click",e=>{this.workflow.AreaId=content.find('flx-dbcombo[name="dbc-areaid"]')[0].getValue(),this.workflow.ModuleId=content.find('flx-dbcombo[name="dbc-moduleid"]')[0].getValue(),this.workflow.Descrip=content.find('flx-text[name="dbc-descrip"]')[0].getValue(),this.workflow.Active=content.find('flx-check[name="dbc-active"]')[0].getValue();let oldCells=[];for(let key in model.cells){let c=model.cells[key];1==c.isEdge()&&0===parseInt(c.target.id)&&oldCells.push(c)}let newValues=[];content.find('label[data-name="propname"]').each((i,e)=>{let value=this.editor.templates.relation.value.cloneNode(!0),lblProp=$(e),prop=lblProp.attr("data-prop"),cboType=lblProp.parent().find(`select[data-name="parenttype"][data-prop="${prop}"]`),cboParent=lblProp.parent().find(`select[data-name="parentname"][data-prop="${prop}"]`),cboParam=lblProp.parent().find(`select[data-name="paramname"][data-prop="${prop}"]`),iotype=cboType.val(),parent=cboParent.val(),param=cboParam.val();if("node".length>0&&parent&&parent.length>0&&param&&param.length>0){let s=`<Parameter childparam="${prop}" iotype="${iotype}" type="node" parent="${parent}" parentparam="${param}"></Parameter>`,r=mxUtils.parseXml(s);value.appendChild(r.documentElement),newValues.push(value)}}),model.beginUpdate();try{graph.removeCells(oldCells),newValues.forEach(n=>{let parent=graph.getModel().getCell(n.firstChild.attributes.parent.value);this.editor.graph.insertEdge(cell,null,n,parent,cell).setVisible(!1)})}finally{model.endUpdate()}this.fixedPropertiesDialog||this.propertiesDialog.destroy()}),flexygo.ajax.post("~/api/Gipe","getNodeRelations",{nodeType:cell.value.nodeName,nodeName:cell.value.getAttribute("fgid")},ret=>{let relations=graph.getEdges(cell),divProps=content.find('div[name="gipeprops"]');ret.forEach(param=>{let parentvalue="",parentdescrip="",typevalue="",paramvalue="";$.each(relations,(i,n)=>{let np=n.value.childNodes[0];np.getAttribute("childparam").toLowerCase()===param.ParamName.toLowerCase()&&(typevalue=np.getAttribute("iotype"),parentvalue=model.getCell(np.getAttribute("parent")).id,paramvalue=np.getAttribute("parentparam"),parentdescrip=model.getCell(np.getAttribute("parent")).value.getAttribute("label"))});let prop=param.ParamName,template=`\n                        <div class="col-12">        \n                            <label   class="col-3" data-name="propname" data-prop="${prop}">${param.ParamLabel}</label>\n                            <select  class="col-3" data-name="parenttype" data-prop="${prop}"><option value=""/><option value="II">Input</option><option value="IO">Input/Output</option><option value="OO">Output</option></select>\n                            <select  class="col-3" data-name="parentname" data-prop="${prop}"></select>\n                            <select  class="col-3" data-name="paramname"  data-prop="${prop}"></select>\n                        </div>`,parsed=$(template);0===typevalue.length&&(typevalue=param.ParamType);let nodes='<option value=""></option>',cboParent=parsed.find(`select[data-name="parentname"][data-prop="${prop}"]`);for(let key in model.cells){let cell=model.cells[key];cell.isVertex()&&(nodes+=`<option value="${cell.id}">${cell.value.getAttribute("label")}</option>`)}cboParent.append(nodes),""!==typevalue&&parsed.find('select[data-name="parenttype"]').val(typevalue),""!==parentvalue&&parsed.find('select[data-name="parentname"]').append(`<option value="${parentvalue}" selected>${parentdescrip}</option>`),""!==paramvalue&&parsed.find('select[data-name="paramname"]').append(`<option value="${paramvalue}" selected>${paramvalue}</option>`),divProps.append(parsed)}),divProps.find('select[data-name="parenttype"]').off("change").on("change",e=>{let cboType=$(e.currentTarget),prop=cboType.attr("data-prop"),cboParent=cboType.parent().find(`select[data-name="parentname"][data-prop="${prop}"]`),cboParam=cboType.parent().find(`select[data-name="paramname"][data-prop="${prop}"]`);switch(cboParam.find("option").remove(),cboParent.val(""),cboParam.val(""),cboType.val()){case"II":cboParent.prop("disabled",!0),cboParam.prop("disabled",!0);break;default:cboParent.prop("disabled",!1),cboParam.prop("disabled",!1),cboParam.html()}}),divProps.find('select[data-name="parentname"]').off("change").on("change",e=>{let cboParent=$(e.currentTarget),prop=cboParent.attr("data-prop"),cboType=cboParent.parent().find(`select[data-name="parenttype"][data-prop="${prop}"]`),cboParam=cboParent.parent().find(`select[data-name="paramname"][data-prop="${prop}"]`);cboParam.find("option").remove();let nodes='<option value=""></option>';switch(cboType.val()){case"II":break;default:let cell=model.getCell(cboParent.val());cell?flexygo.ajax.post("~/api/Gipe","getNodeRelations",{nodeType:cell.value.localName,nodeName:cell.value.getAttribute("fgid")},ret=>{ret.forEach(param=>{nodes+=`<option value="${param.ParamName}">${param.ParamLabel}</option>`}),cboParam.append(nodes)}):cboParam.append(nodes)}})})}updateModuleTitle(){let module=$(this).closest("flx-module"),title=this.moduleTitle;this.workflow&&(title+=" ("+this.workflow.WorkflowId+") - "+this.workflow.Descrip+" - (V"+this.workflow.Version+")"),$(module).find(".cntTitle").text(title)}updateBreadcrumb(){let self=this,bc=$(this).find("ol.breadcrumb");bc.empty(),0===this.currentExecutionId?(this.workflowStack.forEach((wf,i)=>{let li=$(`\n                    <li class="breadcrumb-item"><a>${wf.WorkflowId}</a></li>\n                `);li.on("click",e=>{self.goUp(i)}),bc.append(li)}),this.workflow&&this.workflow.WorkflowId&&bc.append(`\n                        <li class="breadcrumb-item active"><a>${this.workflow.WorkflowId}</a></li>\n                    `)):this.debugStack.forEach((wf,i)=>{let li=$(`\n                        <li class="breadcrumb-item" style="color:red"><a>${wf.WorkflowId}</a></li>\n                    `);li.on("click",e=>{let wf=this.debugStack[i];self.loadDebugWorkflow(wf.WorkflowId,-1,wf.ExecutionId,null)}),bc.append(li)})}concatWhere(whereA,whereB){let where="";return whereA&&whereA.length>0&&(where=whereA),whereB&&whereB.length>0&&(whereA&&whereA.length>0?where+=" AND "+whereB:where=whereB),where}updateComboVersions(){let cbo=$(this.versionCombo);cbo.empty(),this.workflow?this.workflow.Versions.forEach((v,i)=>{let isCurrent=v.Version===this.workflow.Version;cbo.append(`<option value="${v.Version}" ${isCurrent?"selected":""}  >V${v.Version} ${v.Active?"(Active)":""}</option>`)}):cbo.append('<option value="">No versions</option>')}htmlEncode(value){return $("<div/>").text(value).html()}getStepStyle(cell,style){let sep="";switch(style&&style.length>0&&(sep="-"),cell.value.localName.toLowerCase()){case"process":return style+sep+"rectangle";case"object":return style+sep+"ellipse";case"decission":return style+sep+"rhombus";case"workflow":return style+sep+"hexagon";case"event":return style+sep+"cloud";case"relation":return style+sep+"edge";case"label":return"label";default:return void flexygo.msg.error("Invalid value")}}onDebugStepChanged(){0!==this.currentExecutionId&&($(this.debugDialog.content).find('button[name="dbg-stepinto"]').prop("disabled",!1),$(this.debugDialog.content).find('button[name="dbg-stepover"]').prop("disabled",!1),flexygo.ajax.post("~/api/Gipe","getWorkflowExecutionStatus",{executionId:this.currentExecutionId},ret=>{let execInfo=null;ret&&ret.Execution&&ret.Execution.length>0&&(ret.Execution.forEach(ex=>{if(ex.ExecutionId==ret.NextWorkflow)return execInfo=ex,!1}),execInfo||ret.Execution.forEach(ex=>{if(ex.ExecutionId==this.debugWorkflow.ExecutionId)return execInfo=ex,!1})),execInfo.ExecutionId!==this.debugWorkflow.ExecutionId?this.loadDebugWorkflow(execInfo.WorkflowId,-1,execInfo.ExecutionId,ret):this.updateDebugInfo(ret)}))}addTreeNode(change,rootNode){if(change.ExecutionData&&change.ExecutionData.length>0){let model=null,itemLabel="";if(change.ExecutionId==this.debugWorkflow.ExecutionId){let cell=(model=this.editor.graph.getModel()).getCell(change.GraphId);itemLabel=cell.value.getAttribute("label")}else this.debugStack.forEach((wf,i)=>{if(wf.ExecutionId==change.ExecutionId){let node=mxUtils.parseXml(this.debugStack[i].WorkflowData),cell=$(node.documentElement).find(`[id="${change.GraphId}"]`);return cell.length>0&&(itemLabel=cell[0].getAttribute("label")),!1}});let data=(new DOMParser).parseFromString(change.ExecutionData,"text/xml").documentElement,itemNode={text:itemLabel,icon:"fa fa-folder",children:[]},resultNode={text:`<span>${flexygo.localization.translate("flxgipe.labelresult")}:</span><span style="color:black"><b>${change.ResultDescription}</b></span>`,icon:"none",children:[]};if(itemNode.children.push(resultNode),change.ResultId==eStepResult.Error){let errorNode={text:`<span>${flexygo.localization.translate("flxgipe.labelerrormessage")}:</span><span style="color:black"><b>${change.ErrorMessage}</b></span>`,icon:"none",children:[]};resultNode.children.push(errorNode)}let statusNode={text:`<span>${flexygo.localization.translate("flxgipe.labelstatus")}:</span><span style="color:black"><b>${change.StatusDescription}</b></span>`,icon:"none",children:[]};itemNode.children.push(statusNode);let inNode={text:flexygo.localization.translate("flxgipe.treeinnode"),icon:"flx-icon icon-document-export",children:[]},inParams=data.getElementsByTagName("in")[0];$.each(inParams.getElementsByTagName("param"),(i,e)=>{let paramNode={text:`<span>${e.getAttribute("name")}:</span><span style="color:black"><b>${e.getAttribute("value")}</b></span>`,icon:"none"};inNode.children.push(paramNode)}),itemNode.children.push(inNode);let outNode={text:flexygo.localization.translate("flxgipe.treeoutnode"),icon:"flx-icon icon-document-import",children:[]},outParams=data.getElementsByTagName("out")[0];$.each(outParams.getElementsByTagName("param"),(i,e)=>{let paramNode={text:`<span>${e.getAttribute("name")}:</span><span style="color:black"><b>${e.getAttribute("value")}</b></span>`,icon:"none"};outNode.children.push(paramNode)}),itemNode.children.push(outNode),rootNode.children.push(itemNode)}}updateDebugInfo(ret){if(!ret)return;let graph=this.editor.graph,model=graph.getModel(),lastWorkflowExecutionId=ret.LastWorkflow;0===lastWorkflowExecutionId&&(lastWorkflowExecutionId=this.currentExecutionId);let execInfo=null;if(ret&&ret.Execution&&ret.Execution.length>0&&(ret.Execution.forEach(ex=>{if(ex.ExecutionId==lastWorkflowExecutionId)return execInfo=ex,!1}),execInfo)){let finishedSteps=[];ret.Execution.forEach(ex=>{ex.ExecutionId!==execInfo.ExecutionId&&ex.StatusId===eStepStatus.Finished&&this.debugStack.forEach((ds,i)=>{ds.ExecutionId===ex.ExecutionId&&finishedSteps.push(ds)})}),0!==finishedSteps.length&&(finishedSteps.forEach(fs=>{this.debugStack.splice(this.debugStack.indexOf(fs),1)}),this.updateBreadcrumb())}let txtStatus=$("#gipedbg-status")[0],txtResult=$("#gipedbg-result")[0];execInfo&&(txtStatus.setValue(execInfo.StatusDescription),txtResult.setValue(execInfo.ResultDescription),execInfo.ResultId!==eStepResult.NoResult&&($(this.debugDialog.content).find('button[name="dbg-stepinto"]').prop("disabled",!0),$(this.debugDialog.content).find('button[name="dbg-stepover"]').prop("disabled",!0)));let rootNodes=[];if(ret.Execution.forEach(exec=>{let execNode={id:"WF-"+exec.ExecutionId,text:exec.WorkflowDescription,icon:"flx-icon icon-share",children:[]};rootNodes.push(execNode)}),ret.Nodes){model.beginUpdate();try{ret.Nodes.forEach(change=>{if(change.ExecutionId===execInfo.ExecutionId&&change.ExecutionId===this.debugWorkflow.ExecutionId){let cell=model.getCell(change.GraphId);switch(change.ResultId!==eStepResult.NoResult&&cell.edges.forEach(edge=>{edge.target.id===cell.id&&(model.setStyle(edge,this.getStepStyle(edge,"success")),graph.view.getState(edge).shape.node.removeAttribute("class"))}),change.ResultId){case eStepResult.OK:model.setStyle(cell,this.getStepStyle(cell,"success"));break;case eStepResult.Error:model.setStyle(cell,this.getStepStyle(cell,"error"));break;default:model.setStyle(cell,this.getStepStyle(cell,""))}graph.view.getState(cell).shape.node.removeAttribute("class")}let rootNode=null;rootNodes.forEach(n=>{if(n.id=="WF-"+change.ExecutionId)return rootNode=n,!1}),this.addTreeNode(change,rootNode)});let nextId=0;if(ret.NextWorkflow===execInfo.ExecutionId?ret.NextStep&&0!==ret.NextStep?nextId=ret.NextStep:0===execInfo.ResultId&&(nextId=execInfo.InitialGraphId):0===ret.NextWorkflow&&0===ret.NextStep&&ret.LastWorkflow===this.debugWorkflow.ExecutionId&&(nextId=ret.LastStep),0!==nextId){let next=model.getCell(nextId),state=graph.view.getState(next);model.setStyle(next,this.getStepStyle(next,"running")),state.shape.node.setAttribute("class","flow"),next.edges.forEach(edge=>{if(edge.target.id===next.id){let state=graph.view.getState(edge);model.setStyle(edge,this.getStepStyle(edge,"running")),state.shape.node.setAttribute("class","flow")}}),this.lastDebugGraphId={executionId:execInfo.ExecutionId,graphId:nextId}}}finally{model.endUpdate()}}var tree=$("#gipe-debug-tree");tree.jstree(!0).settings.core.data=rootNodes,tree.jstree(!0).refresh(),execInfo.StatusId!=eStepStatus.Aborted&&execInfo.StatusId!=eStepStatus.Finished||execInfo.ExecutionId!=this.currentExecutionId||(this.lastDebugGraphId=null,this.currentExecutionId=0,this.updateToolbarStatus())}}FlxGipeDesignerElement.observedAttributes=["objectname","objectwhere"],wc.FlxGipeDesignerElement=FlxGipeDesignerElement})((ui_1=flexygo.ui||(flexygo.ui={})).wc||(ui_1.wc={}))}(flexygo||(flexygo={})),window.customElements.define("flx-gipedesigner",flexygo.ui.wc.FlxGipeDesignerElement);
var flexygo;!function(flexygo){!function(ui){!function(wc){wc.FlxNotificationElement=class extends HTMLElement{constructor(){super()}connectedCallback(){this.init()}disconnectedCallback(){flexygo.events.off(this,"push","notify",function(e){"updateBadgeNotice"==e.masterIdentity&&void 0!==e.sender.pendingNotices&&this.updateBadge(e.sender.pendingNotices,!0)})}observedAttributes(){return[]}attributeChangedCallback(attrName,oldVal,newVal){}init(){return flexygo.events.on(this,"push","notify",function(e){"updateBadgeNotice"==e.masterIdentity&&void 0!==e.sender.pendingNotices&&this.updateBadge(e.sender.pendingNotices,!0)}),this.refresh()}refresh(){let ctx=$(this),notySpan=$('<span class="notify-dropdown"> <i class="flx-icon icon-bell-2 "></i> <b id="notifyBadge" class="badge  bounceIn animated"></b> </span>');if(ctx.append(notySpan),flexygo.utils.isSizeMobile())notySpan.closest("li").on("click",()=>{flexygo.nav.openPageName("syspage-notify","sysNotices","",null,"current",!1,null)});else{let tooltip=$(`<flx-tooltip container="body" mode="popover" placement="bottom">\n                                    <div class="notifypopover">\n                                        <h4 class="text-center notificationsTitle"><i class="fa fa-bell-o icon-margin-right"></i>${flexygo.localization.translate("flxnotification.title")}</h4>\n                                        <flx-list objectname="sysNotices" objectwhere="" modulename="sysmod-Notification-list"/>\n                                        <div class="row">\n                                            <div class="btn-group notifypopover-buttons">\n                                                <button class="size-xs btn btn-default showAll" onclick="$(document).find('flx-notification')[0].showAll(this)">${flexygo.localization.translate("flxnotification.showAll")}</button>\n                                                <button class="size-xs btn btn-default" onclick="$(document).find('flx-notification')[0].markAsRead(this,null)">${flexygo.localization.translate("flxnotification.allOk")}</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                               </flx-tooltip>`);ctx.prepend(tooltip)}return this.refreshBadge()}goToNotice(elm,noticeId){let params={NoticeId:noticeId};flexygo.ajax.post("~/api/Notify","GetNotice",params,response=>{if(response){let lfnav=new flexygo.ui.wc.FlxNavElement;new Function(lfnav.getTreeNavigate(flexygo.utils.lowerKeys(response))).call(elm)}})}refreshBadge(){if($("#notifyBadge"))return new Promise((resolve,_)=>{flexygo.ajax.post("~/api/Notify","GetBadgeValue",null,response=>{this.updateBadge(response,!1),resolve()},err=>{flexygo.utils.modules.loadingErrorFunction(this.closest("flx-module"),err),resolve()})})}updateBadge(pendingNotices,sound){var currentNotices=$("#notifyBadge").html();if(currentNotices&&""!=currentNotices||(currentNotices="0"),pendingNotices>parseInt(currentNotices)){var snd=new Audio(flexygo.utils.resolveUrl("~/js/plugins/lobibox-master/sounds/sound1.ogg"));!flexygo.utils.testMode&&sound&&snd.play()}0==pendingNotices?$("#notifyBadge").html(""):pendingNotices>9?($("#notifyBadge").css({padding:"2px"}),$("#notifyBadge").html("+9")):($("#notifyBadge").css({padding:"2px 6px"}),$("#notifyBadge").html(pendingNotices.toString()))}markAsRead(elm,noticeId){let ni=noticeId,params={NoticeId:noticeId};flexygo.ajax.post("~/api/Notify","SetNoticeIsRead",params,response=>{response&&(ni?$(elm).closest(".active").removeClass("active"):$(elm).closest(".notifypopover").find(".active").removeClass("active")),this.refreshBadge()})}showAll(elm){let popover=$(elm).closest(".popover");elm&&popover.length>0&&($(this).popover("hide"),flexygo.nav.openPageName("syspage-extended-notify","sysNotices","",null,"current",!1,null))}}}(ui.wc||(ui.wc={}))}(flexygo.ui||(flexygo.ui={}))}(flexygo||(flexygo={})),window.customElements.define("flx-notification",flexygo.ui.wc.FlxNotificationElement);
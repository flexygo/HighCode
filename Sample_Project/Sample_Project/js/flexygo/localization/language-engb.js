/**
 * @namespace flexygo.culture.engb
 */
var flexygo;
(function (flexygo) {
    var culture;
    (function (culture) {
        var engb;
        (function (engb) {
            engb.process = {
                executing: 'Executing process...',
            };
            engb.dependecymanager = {
                sort: 'Sort',
                valuedep: 'Value Dep.',
                classdep: 'Class Dep.',
                combodep: 'Combo Dep.',
                enabledep: 'Enabled Dep.',
                visibledep: 'Visible Dep.',
                requireddep: 'Required Dep.',
                save: 'Save',
                addmore: 'Add more depending properties',
                sqlvalue: 'SQL Value',
                sqlclass: 'SQL Class',
                sqlcombofilter: 'SQL Combo Filter',
                sqlcombosentence: 'SQL Combo Sentence',
                enabledvalues: 'Enabled Values',
                disabledvalues: 'Disabled Values',
                sqlenabledsentence: 'SQL Enabled Sentence',
                visiblevalues: 'Visible Values',
                hiddenvalues: 'Hidden Values',
                visiblesentence: 'SQL Visible Sentence',
                requiredvalues: 'Required Values',
                notrequiredvalues: 'Not Required Values',
                requiredsentence: 'SQL Required Sentence',
                description: 'Description',
                connectionstrings: 'Connection strings',
                connStringvalues: 'Connection string values'
            };
            engb.develop = {
                developer: 'Developer',
                adminarea: 'Admin area',
                help: 'Help',
                dependencymanager: 'Dependency Manager',
                filtermanager: 'Filter Manager',
                modulemanager: 'Module Manager',
                nodemanager: 'Node Manager',
                settings: 'Settings',
                wizard: 'Wizard',
                editproperties: 'Edit Properties',
                modules: 'Modules',
                collection: 'Collection',
                page: 'Page',
                object: 'Object',
                imagemanager: 'Image Manager',
                documentmanager: 'Document Manager',
                viewobject: 'View Object',
                security: 'Security',
                objectsecurity: 'Object Security',
                objectprocesssecurity: 'Object Process Security',
                selectobject: 'Please select a page containing an object',
                objectpropertysecurity: 'Property security',
                pageSettings: 'Page Settings',
                chatter: 'Chatter',
            };
            engb.history = {
                historyempty: 'Navigation history empty',
                showmore: 'Show more',
            };
            engb.msg = {
                confirm: 'Please confirm',
                fieldrequired: 'The field is required',
                copied: 'Copied',
            };
            engb.navigation = {
                relatedobjects: 'Related Objects',
                reports: 'Reports',
                noelements: 'No existing elements',
                popupwarning: 'Pop-up windows blocked by browser. Please, change settings.',
            };
            engb.flxfilter = {
                searchplaceholder: 'Search by: ',
                showall: 'Show all',
            };
            engb.flxkanban = {
                addCard: 'Add new',
            };
            engb.flxarea = {
                noprocesses: 'No processes',
                clickexpand: 'Click to expand/collapse processes',
            };
            engb.flxedit = {
                addfields: 'Add fields',
                selectall: 'Select all',
                selectnone: 'Select none',
                createwarning: 'Please, select one field at least.',
                appendwarning: 'Please select a field type and a field name',
                createfields: 'Create new table fields',
                enterfieldname: 'Field Name',
                selecttype: 'Select data type',
                seedependencies: 'See dependencies',
                templates: 'Templates',
                objectsettings: 'Object settings',
                label: 'Label',
                style: 'Style',
                classname: 'Class Name',
                selecticon: 'Select an Icon',
                selectcontroltype: 'Select a control type',
                locked: 'Locked',
                required: 'Required',
                hidden: 'Hidden',
                addseparatora: 'Add Separator above',
                addseparatorb: 'Add Separator below',
                addplaceholder: 'Add place holder',
                save: 'Save',
                close: 'Close',
                areyousuretitle: 'Unsaved changes',
                areyousuremsg: 'Do you really want to close this page?',
                emptyproperty: 'Empty property',
                addproperties: 'Add properties',
                propertyname: 'Property Name',
                propertylabel: 'Property Label',
                adddetachedproperty: 'Add detached property',
                selecttable: 'Select Table'
            };
            engb.flxeditgrid = {
                addrow: 'Add row',
                removeselection: 'Remove selection',
                hide: 'Hide',
                settings: 'Settings',
                deleteconfirm: 'Do you want to remove all selected elements?',
            };
            engb.flxgipe = {
                butonadd: 'Add',
                buttonload: 'Load',
                buttonsave: 'Save',
                buttoncancel: 'Cancel',
                dialogloadtitle: 'Load workflow',
                dialogsavetitle: 'Save workflow',
                dialogpropertiestitle: 'Properties',
                dialogtemplatetitle: 'Select template',
                dialogdebugtitle: 'Debug execution',
                errornoworkflowselected: 'Please select a workflow to load',
                errornoversionselected: 'Please select a workflow version',
                confirmunsavedchanges: 'Do you have unsaved changes, are you sure do you wish to continue?',
                labelarea: 'Area:',
                labelmodule: 'Module:',
                labelname: 'Name:',
                labeldescrip: 'Description:',
                labelversion: 'Version:',
                labeltop: 'Top:',
                labelleft: 'Left:',
                labelheight: 'Height:',
                labelwidth: 'Width:',
                labellabel: 'Label:',
                labelobject: 'Object:',
                labelprocess: 'Process:',
                labelworkflow: 'Workflow:',
                labeldecission: 'Decission:',
                labelevent: 'Event:',
                labelactive: 'Active:',
                labelstatus: 'Status:',
                labelresult: 'Result:',
                labelerrormessage: 'Error message:',
                labelrelations: 'Parameter relations:',
                labeloutputparams: 'Output parameters:',
                labelbackgroundcolor: 'Background Color:',
                labelbordercolor: 'Border Color:',
                labeltextcolor: 'Text Color:',
                treeinnode: 'Input parameters:',
                treeoutnode: 'Output parameters:',
                workflowareaplaceholder: 'Select area...',
                workfloworiginplaceholder: 'Select origin...',
                workflowmoduleplaceholder: 'Select module...',
                workflownameplaceholder: 'Enter name...',
                workflowversionplaceholder: 'Select version...',
                searchtemplates: 'Search templates...',
                editortemplates: {
                    process: 'Process',
                    object: 'Object',
                    decission: 'Decission',
                    event: 'Event',
                    workflow: 'Workflow',
                    label: 'Label',
                    toggleall: 'Check / Uncheck all',
                },
                editortoolbar: {
                    new: 'New',
                    open: 'Open',
                    save: 'Save',
                    generate: 'Generate',
                    up: 'Up',
                    down: 'Down',
                    run: 'Run',
                    debug: 'Debug',
                    select: 'Select',
                    pan: 'Pan',
                    undo: 'Undo',
                    redo: 'Redo',
                    cut: 'Cut',
                    copy: 'Copy',
                    paste: 'Paste',
                    delete: 'Delete',
                    group: 'Group',
                    ungroup: 'Ungroup',
                    workflow: 'Workflow',
                    object: 'Object',
                    process: 'Process',
                    decission: 'Decission',
                    event: 'Event',
                    connect: 'Connect',
                    fit: 'Fit',
                    zoomin: 'Zoom In',
                    zoomout: 'Zoom Out',
                    actualsize: 'Actual Size',
                    templates: 'Templates',
                    properties: 'Properties',
                    label: 'Label',
                },
                messages: {
                    savefirst: 'Save the graphic first to generate the workflow',
                    workflowgenerated: 'Workflow generated successfully',
                    workflowsaved: 'Workflow saved successfully',
                },
                popupmenu: {
                    workflowproperties: 'Workflow Properties',
                    view: 'View',
                    properties: 'Properties',
                    enter: 'Enter',
                    new: 'New',
                    listparams: 'View params',
                },
            };
            engb.filtermanager = {
                choosefilter: 'Choose filter',
                objectname: 'Object',
                filtertype: 'Filter type',
                properties: 'Properties',
                fields: 'Fields',
                unsaved: 'There are unsaved changes. Continue?',
                sure: 'Are you sure?',
                add: 'Add',
                errornofilter: 'Please, add new filter first.',
                errornofields: 'Please, append some fields first.',
                save: 'Save',
                delete: 'Delete',
            };
            engb.sortmanager = {
                sort: 'Sort',
                apply: 'Apply',
                clean: 'Clean',
            };
            engb.flxlist = {
                noentriesfound: 'No entries found.',
                warning: 'Module hasn\'t got template but has specific html string on module. Showing module settings.',
                currentfiltervalues: 'Save current filter values.',
                removecurrentfiltervalues: 'Confirm you would like to remove the selected filter values.',
                name: 'Name',
                generic: 'Generic',
                savefilter: 'Save filter',
                selectfilterfirst: 'Please select a filter first',
                save: 'Save',
            };
            engb.flxmodule = {
                delete: 'Delete',
                save: 'Save',
                new: 'New',
                edit: 'Edit',
                view: 'View',
                print: 'Print',
                help: 'Help',
                settings: 'Settings',
                process: 'Process',
                report: 'Report',
                export: 'Export',
                back: 'Back',
                unknown: 'Unknown function',
                templates: 'Templates',
                noprop: 'Module without properties.',
                requiredsaving: 'Complete all required fields before saving. Like :',
                noparams: 'No params to recover.',
                requiredrunning: 'Complete all required fields before running process',
                requiredreport: 'Complete all required fields before openning report',
                deleted: 'Deleted :)',
                saved: 'Saved :)',
                uniqueBagError: 'Undefined Unique Identifier Field.',
                nofieldBagError: 'Can\'t find field <b>{0}</b> in current row. Add it to query or remove selection button.',
                noItemsSelected: 'Select some items from the list first.',
            };
            engb.flxnav = {
                notimplemented: 'Action node not implemented',
                pIdNotespecified: 'Process id not especified',
                urlnotespecified: 'Url not especified',
                autoSQlnovalidtype: 'Auto Generate SQL is not a valid node type.',
                webcomponentnotspecified: 'Web component not specified.',
                helpidnotspecified: 'Help ID not specified',
                moreinfo: 'More Info.',
            };
            engb.image = {
                browsebutton: 'Browse',
                browsebuttontooltip: 'You can browse or drag an image',
                savebutton: 'Save',
                removebutton: 'Remove',
                cropbutton: 'Crop',
                movebutton: 'Move',
                zoombutton: 'Zoom',
                rotatebutton: 'Rotate',
                scalebutton: 'Scale',
                aspectratiobutton: 'Aspect ratio',
                resetbutton: 'Reset',
                downloadbutton: 'download',
                free: 'Free',
                errorfiletype: 'Only accepts images',
                errorfilenumber: 'Only accepts an image',
                infotostart: 'Browse or drag an image to start',
                errorfilename: 'The image has not got name',
                errorrootpath: 'Root Path',
            };
            engb.documentmanager = {
                upload: 'Upload',
                info: 'Browse or drag documents',
                saved: 'Saved',
                save: 'Save',
                return: 'Return',
                removed: 'Removed',
                errorsaving: 'Error saving',
                errorremoving: 'Error removing',
                copy: 'Copy to clipboard',
                preview: 'Preview',
                edit: 'Edit',
                remove: 'Remove',
                disk: 'Disk',
                diskfiles: 'Files',
                diskfolders: 'Folders',
                drive: 'Drive',
                dropbox: 'Dropbox',
                download: 'Download',
                link: 'Link',
                filter: 'Filters',
                folderorfile: 'Folder or file',
                browsernotsupported: 'Your browser is not supported',
                settings: 'Settings',
                permissionerror: 'Sorry, you do not have permissions',
                documentempty: 'Document empty',
            };
            engb.imagemanager = {
                upload: 'Upload',
                settings: 'Settings',
                msgremove: 'Are you sure you want to remove the image ?',
                msgremoveall: 'Are you sure you want to remove ALL the images ?',
                removed: 'Image removed',
                removedall: 'All images where removed',
                errorremoving: 'Error removing image',
                uploaded: 'Image uploaded',
                erroruploading: 'Error uploading image',
                updated: 'Image updated',
                errorupdating: 'Error updating image',
                permissionerror: 'Sorry, you do not have permissions',
                imageepmty: 'Image empty',
                downloadall: 'Download all images',
                deleteall: 'Delete all images',
                errordownload: 'Error downloading images',
                noimages: 'There are no images',
            };
            engb.upload = {
                uploaded: 'Uploaded',
                error: 'Upload error',
                info: 'Drag to upload',
            };
            engb.file = {
                saved: 'File saved ;)',
                errorsaving: 'Error saving file :(',
                resultbase64: '1 file in base64',
            };
            engb._export = {
                success: 'Success exporting data ;)',
                error: 'Error exporting data :(',
                exportinglist: 'Exporting list',
            };
            engb.modulemanager = {
                save: 'Save',
                searchmodules: 'Search modules',
                cancel: 'Cancel',
                tabid: 'Tab identifier',
                tabtitle: 'Tab title',
                tabdescrip: 'Tab description',
                selecttabicon: 'Select tab icon',
                classification: 'Classification',
                addnewtabmodule: 'Add new tab module',
                changepagerelation: 'Change page module relation',
                configmodule: 'Config Module',
                removemodule: 'Remove module',
                events: 'Attached Events',
                security: 'Module security',
                tabMode: 'Tab mode',
            };
            engb.moduletab = {
                emptytabs: 'Empty Tabs',
                nocontent: 'No content.',
            };
            engb.nodemanager = {
                save: 'Save',
                title: 'Node Manager',
                deletenode: 'Delete node',
                deletenodequestion: 'Are you sure you want to delete this node?',
                addfields: 'Add fields',
            };
            engb.objectmanager = {
                selecticon: 'Select icon',
                validicon: 'You must enter a valid icon class name',
                objectname: 'Object name',
                validobjectname: 'You must enter an object name',
                objectdescription: 'Object description',
                validobjectdescription: 'You must enter an object description',
                collectionname: 'Collection name',
                validcollectionname: 'You must enter a collection name',
                collectiondescription: 'Collection description',
                validcollectiondescription: 'You must enter a collection description',
                datasource: 'Data Source',
                fromtable: 'From Table',
                fromview: 'From View',
                fromnewtable: 'From new Table',
                selectcnnstring: 'Select connection string',
                validcnnstring: 'You must enter a valid connection string',
                selecttable: 'Select origin',
                validorigin: 'You must enter a valid origin',
                newtablename: 'New Table Name',
                validnewtablename: 'You must enter a table name',
                viewkeyfields: 'View key fields',
                validviewkeyfields: 'You must enter a view key fields',
                savecontinue: 'Save & Continue',
                continue: 'Continue',
                listtemplate: 'List Template',
                edittemplate: 'Edit Template',
                viewtemplate: 'View Template',
                objectcreated: 'Object Created',
                selectoption: 'Select an option',
                listform: 'Show <b>List</b> form.',
                editform: 'Show <b>Edit</b> form.',
                objectconfig: 'Show <b>Object</b> configuration.',
                collectionconfig: 'Show <b>Collection</b> configuration.',
                showrelations: 'Show <b>relations</b>',
                saved: 'Saved',
                basicinfo: 'Basic information',
                objectproperties: 'Object Properties',
                listsettings: 'List settings',
                displaysettings: 'Template settings',
                end: 'End',
                colproperties: 'Edit grid properties (optional)',
                save: 'Save',
            };
            engb.flxpropertymanager = {
                addfields: 'Click "add fields" button to start.',
                label: 'Label',
                style: 'Style',
                classname: 'Class Name',
                selecticon: 'Select an Icon',
                selectcontroltype: 'Select a control type',
                locked: 'Locked',
                required: 'Required',
                hidden: 'Hidden',
                addseparatora: 'Add Separator above',
                addseparatorb: 'Add Separator below',
                addplaceholder: 'Add place holder',
                save: 'Save',
                close: 'Close',
            };
            engb.flxversioninfo = {
                currentversion: 'Actual version ({{CurrentVersion}}).',
                lastversion: 'Last version ({{LastVersion}}).',
                updatedversion: 'The application is up-to-date.',
                pendingchanges: 'There are changes pending of review',
                reviewchanges: 'Show pending changes',
                newupdate: 'There is a new update available ({{LastVersion}}).',
                update: 'Update',
                info: 'Info',
                test: 'Show Test',
                delete: 'Delete',
                deleting: 'Deleting version',
                updating: 'Updating',
                initupdate: 'Initializing update...',
                estatusupdatingservice: 'Updating service...',
                estatuscheckingpackages: 'Checking packages...',
                estatusdownloadingversion: 'Downloading new version...',
                estatusfinished: 'Finished',
                estatusupdatedatabase: 'Updating database...',
                estatusupdateiis: 'Updating web application...',
                applicationwillreset: 'The application is being restarted',
                updatesuccessful: 'Update succesful!',
                oldversion: 'Old version ({{VersionNumber}})',
                newversion: 'New version ({{VersionNumber}})',
                confirmupdate: 'Are you sure you want to update application?',
                confirmdelete: 'Are you sure you want to delete version?',
                deletesuccessful: 'Delete succesful!',
                infotitle: 'Version information',
                infoversion: 'Version number:',
                infopath: 'Virtual path:',
                infodatabase: 'Database:',
                confirmwarningtitle: 'Warning!',
                confirmwarninglabel: 'Please confirm these actions:',
                switch: 'Switch',
                confirmswitch: 'Are you sure you want to switch to this version?',
                releasenotes: 'Release Notes',
                oldversionvalue: 'Old Version Value',
                customvalue: 'Custom Value',
                newversionvalue: 'New Version Value',
                manualvalue: 'Manual Value',
                applychanges: 'Apply changes',
                nochanges: 'No changes marked for apply',
                changecount: 'Are you sure you want to apply {{count}} changes?',
                applychangessuccesful: 'Changes applied succesfully',
            };
            engb.viewmanager = {
                properties: 'Properties',
                fields: 'Fields',
                unsaved: 'There are unsaved changes. Continue?',
                add: 'Add',
                errornofilter: 'Please, add new view first.',
                errornofields: 'Please, append some fields first.',
                errornosql: 'SQL field can\'t be blank.',
                validate: 'Validate',
                errorduplicateprop: 'Field {0} alredy exists.',
            };
            engb.templates = {
                addnewtemplate: 'Add new Template',
            };
            engb.flxscheduler = {
                objects: 'Objects',
                chooseobjects: 'Choose Object',
            };
            engb.flxscheduleryear = {
                january: 'January',
                february: 'February',
                march: 'March',
                april: 'April',
                may: 'May',
                june: 'June',
                july: 'July',
                august: 'August',
                september: 'September',
                october: 'October',
                november: 'November',
                december: 'December',
                mn: 'Mon',
                tu: 'Tue',
                we: 'Wed',
                th: 'Thu',
                fr: 'Fri',
                sa: 'Sat',
                su: 'Sun',
            };
            engb.flxsearch = {
                search: 'Search...',
                pleasewrite: 'Please write the text to search',
                speak: 'Speak now...',
            };
            engb.text = {
                map: 'Click on the map',
                errormap: 'The address was not found',
                api: 'Google API Key not found.',
                apihelp: 'See our help to find out how to get.',
            };
            engb.flxfunnel = {
                data: 'No data',
            };
            engb.flxtimeline = {
                withoutDescription: 'Without Description',
                withoutRegisters: 'Without Registers',
                hour: 'Hour',
                today: 'Today',
                day: 'Day',
                week: 'Week',
                month: 'Month',
                year: 'Year',
                navigation: 'Navigation',
                range: 'Range',
                title: 'HELP & SHORTCUTS ',
                description: 'Description',
                action: 'Action',
                selectitem: 'Select item',
                multiselectitems: 'Multiselect items',
                multiselectbyrange: 'Multiselect items by time range',
                multiselectbyrangegroup: 'Multiselect items by time range in a group',
                createitem: 'Create item',
                createitemwithrange: 'Create item with range',
                edititem: 'Edit item',
                openeditview: 'Open edit view',
                zoom: 'Change time range',
                navigationtime: 'Navigation in time',
                or: 'or',
                to: 'to',
                withoutpercentage: 'Without Percentage',
                notsupported: 'Screen size not supported',
            };
            engb.flxfilebrowser = {
                saved: 'Saved',
                errorsaving: 'Error saving',
                errorremoving: 'Error removing',
                permissionerror: 'Sorry, you do not have permissions',
                documentempty: 'Document empty',
                itemsselected: 'items selected',
                emptyfolder: 'The folder is empty',
                existingfiles: 'Some files exist on server',
                overwritefiles: 'Are you sure you want to overwrite them?',
                deleting: 'Deleting',
                items: 'items',
                sure: 'Are you sure?',
                currentfolder: 'Current folder',
                uploadfiles: 'Upload Files',
                addfolder: 'Add Folder',
                download: 'Download',
                delete: 'Delete',
                goback: 'Go Back',
                processingdownload: 'Processing Download',
            };
            engb.chatter = {
                composerplaceholder: 'Type something',
                sendbutton: 'Register',
                startinfo: 'You must first configure the chatter',
            };
        })(engb = culture.engb || (culture.engb = {}));
    })(culture = flexygo.culture || (flexygo.culture = {}));
})(flexygo || (flexygo = {}));
//# sourceMappingURL=language-engb.js.map